{"version":3,"sources":["./src/app/pedido/pedido-listar/pedido-listar-routing.module.ts","./src/app/pedido/pedido-listar/components/pedido-listar.component.ts","./src/app/pedido/pedido-listar/components/pedido-listar.component.html","./src/app/produto/produto.service.ts","./src/app/pedido/pedido-listar/pedido-listar.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACsB;;;AAE7E,MAAM,MAAM,GAAW;IACpB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,yFAAqB,EAAC;IAC5C,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAqB,EAAC;CACtD,CAAC;AAMK,MAAM,yBAAyB;;wGAAzB,yBAAyB;4KAAzB,yBAAyB,kBAH3B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,yBAAyB,uFAF1B,4DAAY;6FAEX,yBAAyB;cAJrC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuF;AAEzB;AAExB;AAO+E;AAC3D;AACwB;;;;;;;;;;;;;;;ICI5E,yEACE;IAAA,mFAEe;IAFD,qVAAoC,IAAI,IAAC;IAEvD,4DAAe;IACjB,4DAAK;;;IAHqD,0DAAmD;IAAnD,0HAAmD;;;;IAI7G,yEACE;IAAA,mFAEe;IAFD,kOAAS,wBAAwB,IAAC,mSAAoB,iCAAqB,GAAG,IAAI,IAAhD;IAEhD,4DAAe;IACjB,4DAAK;;;;IAFD,0DAAqC;IAArC,yGAAqC;;;IAKzC,yEAAsC;IAAA,sEAAM;IAAA,4DAAK;;;IACjD,yEAAmC;IAAA,uDAAc;IAAA,4DAAK;;;IAAnB,0DAAc;IAAd,+EAAc;;;IAKjD,yEAAsC;IAAA,mEAAQ;IAAA,4DAAK;;;IACnD,yEAAmC;IAAA,uDAAgB;IAAA,4DAAK;;;IAArB,0DAAgB;IAAhB,iFAAgB;;;IAInD,yEAAsC;IAAA,8EAAc;IAAA,4DAAK;;;IACzD,yEAAmC;IAAA,uDAAsC;;IAAA,4DAAK;;;IAA3C,0DAAsC;IAAtC,6JAAsC;;;IAIzE,yEAAsC;IAAA,2EAAW;IAAA,4DAAK;;;IACtD,yEAAmC;IAAA,uDAAmC;;IAAA,4DAAK;;;IAAxC,0DAAmC;IAAnC,0JAAmC;;;IAKtE,yEAAsC;IAAA,sEAAW;IAAA,4DAAK;;;IACtD,yEAAmC;IAAA,uDAA4C;;IAAA,4DAAK;;;IAAjD,0DAA4C;IAA5C,0KAA4C;;;IAI/E,yEAAsC;IAAA,wEAAa;IAAA,4DAAK;;;IACxD,yEAAmC;IAAA,uDAAiD;;IAAA,4DAAK;;;IAAtD,0DAAiD;IAAjD,6KAAiD;;;IAIpF,yEAAsC;IAAA,6EAAQ;IAAA,4DAAK;;;IACnD,yEAAmC;IAAA,uDAAc;IAAA,4DAAK;;;IAAnB,0DAAc;IAAd,+EAAc;;;IAKjD,yEAAsC;IAAA,0EAAK;IAAA,4DAAK;;;;IAChD,yEACE;IAAA,wEACE;IAAA,wEACE;IAAA,iEACF;IAAA,4DAAI;IACN,4DAAI;IACJ,6EACE;IADmC,oWAA0B;IAC7D,2EAAU;IAAA,yEAAc;IAAA,4DAAW;IACrC,4DAAS;IACX,4DAAK;;;IARA,0DAAyC;IAAzC,sHAAyC;;;IAWhD,oEAAyD;;;IACzD,oEAA+D;;AD7D5D,MAAM,qBAAqB;IAgB9B,YAAoB,aAA4B,EACrC,MAAiB,EAEhB,MAAc,EACd,WAAwB;QAJhB,kBAAa,GAAb,aAAa,CAAe;QACrC,WAAM,GAAN,MAAM,CAAW;QAEhB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAnBpC,8CAA8C;QAC9C,qFAAqF;QACrF,6BAA6B;QAG7B,kBAAa,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAC,eAAe,EAAC,YAAY,EAAE,YAAY,EAAE,iBAAiB,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAEnI,SAAI,GAAiB,IAAI,qDAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAIrC,eAAU,GAAG,KAAK,CAAC;QACnB,cAAS,GAAG,IAAI,uEAAc,CAAS,IAAI,EAAE,EAAE,CAAC,CAAC;IAOT,CAAC;IAEzC,QAAQ;QACJ,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,0DAA0D;IAE9D,CAAC;IAED,aAAa;QACT,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACzC,OAAO,WAAW,KAAK,OAAO,CAAC;IACnC,CAAC;IAED,YAAY;QACR,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;YAClB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,eAAe,CAAC,QAAgB;QAC5B,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,MAAM,YAAY,GAAG,QAAQ,CAAC;QAC9B,IAAI,WAAW,KAAK,CAAC,EAAE;YACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,mCAAmC,EAAE,IAAI,EAAE;gBAC7D,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,gBAAgB;aAC/B,CAAC,CAAC;SACN;aAAM;YACH,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBAClC,IAAI,YAAY,KAAK,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;oBAClE,GAAG,CAAC,MAAM,GAAG,YAAY,CAAC;oBAC1B,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACrB;gBACD,IAAI,YAAY,KAAK,YAAY,EAAE;oBAC/B,GAAG,CAAC,MAAM,GAAG,YAAY,CAAC;oBAC1B,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACrB;YAEL,CAAC,CAAC,CAAC;YAEH,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBACxD,IAAI,GAAG,EAAE;wBACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gCAAgC,EAAE,IAAI,EAAE;4BAC1D,QAAQ,EAAE,IAAI;4BACd,UAAU,EAAE,gBAAgB;yBAC/B,CAAC,CAAC;qBAEN;gBACL,CAAC,CAAC,CAAC;aACN;iBAAM;gBACH,IAAI,CAAC,WAAW,EAAE,CAAC;gBAEnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,mCAAmC,EAAE,IAAI,EAAE;oBAC7D,QAAQ,EAAE,IAAI;oBACd,UAAU,EAAE,gBAAgB;iBAC/B,CAAC,CAAC;aAEN;SACJ;IACL,CAAC;IAGD,YAAY,CAAC,UAAe;QACxB,MAAM,KAAK,GAAG,uDAAM,CAAC,IAAI,IAAI,EAAE,EAAE,kBAAkB,CAAC,CAAC;QACrD,MAAM,YAAY,GAAG,uDAAM,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,kBAAkB,CAAC,CAAC;QAEtE,MAAM,MAAM,GAAG,kEAAiB,CAC5B,IAAI,IAAI,CAAC,KAAK,CAAC,EACf,IAAI,IAAI,CAAC,YAAY,CAAC,CACzB;QAGD,IAAI,MAAM,IAAI,EAAE,EAAE;YACd,OAAO,IAAI,CAAC;SACf;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,WAAW;QACP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,cAAc,CAAC;QACnB,IAAI,CAAC,aAAa;aACb,MAAM,CACH,IAAI,4DAAW,CACX;YACI,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACzD,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SACzD,EACD;YACI,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ;YAC3D,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK;SAC/D,EACD,cAAc,CACjB,CACJ;aACA,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CACN,CAAC,IAAI,EAAE,EAAE;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC5B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACN,IAAI,CAAC,IAAI,GAAG,IAAI,qDAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,EAAE;gBAClD,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,cAAc;aAC7B,CAAC,CAAC;QACP,CAAC,CACJ,CAAC;IACV,CAAC;IAED,QAAQ,CAAC,IAAI;QACT,MAAM,OAAO,GAAG,+CAA+C,CAAC;QAChE,MAAM,UAAU,GAAG,IAAI,yGAAkB,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QAEjE,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6GAAsB,EAAE;YACvD,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,UAAU;SACnB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACpC,IAAI,GAAG,EAAE;gBACL,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;oBAC5C,IAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,EAAE;wBACjD,QAAQ,EAAE,IAAI;wBACd,UAAU,EAAE,gBAAgB;qBAC/B,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IAEP,CAAC;;0FA7JQ,qBAAqB;qGAArB,qBAAqB;QCpBlC,yEACE;QAAA,4EACE;QAAA,2EAAU;QAAA,8DAAG;QAAA,4DAAW;QAC1B,4DAAS;QACX,4DAAM;QACN,yEACE;QAAA,wEAAmB;QAAA,2EAAgB;QAAA,4DAAK;QACxC,4EAAwC;QAC1C,4DAAM;QACN,sEACE;QAAA,4EAAgF;QAAxC,6IAAS,oBAAgB,YAAY,CAAC,IAAC;QAAC,qEAAS;QAAA,4DAAS;QAClG,6EAA4E;QAApC,8IAAS,oBAAgB,QAAQ,CAAC,IAAC;QAAC,mEAAO;QAAA,4DAAS;QAC9F,4DAAM;QACN,0EAEE;QAAA,4EACE;QADmD,2LAAqC,iBAAa,IAAE;QACvG,4EACE;QAAA,iHACE;QAIF,kHACE;QAIJ,qEAAe;QACf,6EACE;QAAA,iHAAsC;QACtC,kHAAmC;QACrC,qEAAe;QAGf,6EACE;QAAA,iHAAsC;QACtC,kHAAmC;QACrC,qEAAe;QAEf,6EACE;QAAA,iHAAsC;QACtC,kHAAmC;QACrC,qEAAe;QAEf,6EACE;QAAA,iHAAsC;QACtC,kHAAmC;QACrC,qEAAe;QAGf,6EACE;QAAA,iHAAsC;QACtC,kHAAmC;QACrC,qEAAe;QAEf,6EACE;QAAA,iHAAsC;QACtC,kHAAmC;QACrC,qEAAe;QAEf,6EACE;QAAA,iHAAsC;QACtC,kHAAmC;QACrC,qEAAe;QAGf,6EACE;QAAA,iHAAsC;QACtC,kHACE;QASJ,qEAAe;QAEf,kHAAoD;QACpD,kHAA0D;QAC5D,4DAAQ;QACV,4DAAM;;QApEa,2DAA2B;QAA3B,wFAA2B;QAiEvB,2DAAgC;QAAhC,8FAAgC;QACvC,0DAA6C;QAA7C,+FAA6C;;6FD7DhD,qBAAqB;cALjC,uDAAS;eAAC;gBACP,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC/C;;;;;;;;;;;;;;AElBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEF;AACQ;AACQ;AACE;;;;AAOpD,MAAM,cAAc;IAMvB,YAAoB,QAAqB,EAC7B,UAAsB;QADd,aAAQ,GAAR,QAAQ,CAAa;QAC7B,eAAU,GAAV,UAAU,CAAY;QAN1B,YAAO,GAAG,wEAAW,CAAC,GAAG,CAAC,MAAM,CAAC;QAEjC,aAAQ,GAAG,UAAU,CAAC;IAIQ,CAAC;IAEvC,MAAM,CAAC,YAA0B;QAE7B,OAAO,IAAI,CAAC,UAAU;aACjB,GAAG,CAAY,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,YAAY,CAAC,gBAAgB,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAC9G,IAAI,CACD,0DAAG,CAAC,QAAQ,CAAC,EAAE,CAAgB,qDAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAC9D,CAAC;IAEV,CAAC;IAED,SAAS,CAAC,OAAgB;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE;YAC9E,OAAO,EAAE,UAAU;SACtB,CAAC,CAAC;IACP,CAAC;IAED,yFAAyF;IACzF,gGAAgG;IAChG,4BAA4B;IAC5B,UAAU;IACV,MAAM;IAEN,6FAA6F;IAC7F,2DAA2D;IAC3D,wDAAwD;IACxD,UAAU;IACV,8BAA8B;IAC9B,UAAU;IACV,SAAS;IACT,MAAM;IAEN,cAAc,CAAC,EAAU;QACrB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC,CAAC;IAClF,CAAC;IACD,eAAe,CAAC,GAAW;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,GAAG,MAAM,CAAC,CAAC;IACvF,CAAC;IAED,SAAS,CAAC,OAAgB;QACtB,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,CAAC,CAAC;QAC1F,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,OAAO,CAAC,GAAW;QACf,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,GAAG,EAAE,CAAC,CAAC;IAC7E,CAAC;IACD,WAAW,CAAC,IAAS;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,SAAS,EAAE,IAAI,CAAC,CAAC;IACtF,CAAC;IACD,WAAW;QACP,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAC1E,0DAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EACjB,iEAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAC1C,CAAC;IACN,CAAC;IACD,WAAW,CAAC,GAAW,EAAE,UAAmB,KAAK;QAC7C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;YACzB,QAAQ,EAAE,IAAI;YACd,kBAAkB,EAAE,OAAO;YAC3B,gBAAgB,EAAE,KAAK;YACvB,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC;SACxD,CAAC,CAAC;IACP,CAAC;IACD,YAAY,CAAC,CAAM;QACf,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;QAC3C,OAAO,0CAAK,CAAC;IACjB,CAAC;;4EA3EQ,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFX,MAAM;6FAET,cAAc;cAH1B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAE4B;AACE;AACpB;;AAWlD,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBANpB;YACP,sEAAc;YACd,4DAAY;YACZ,uFAAyB;SAC1B;mIAEU,kBAAkB,mBAPd,yFAAqB,aAElC,sEAAc;QACd,4DAAY;QACZ,uFAAyB;6FAGhB,kBAAkB;cAR9B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,yFAAqB,CAAC;gBACrC,OAAO,EAAE;oBACP,sEAAc;oBACd,4DAAY;oBACZ,uFAAyB;iBAC1B;aACF","file":"11.a8f7cfe19648c8a02a23.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PedidoListarComponent } from './components/pedido-listar.component';\r\n\r\nconst routes: Routes = [\r\n   {path: \"\", component: PedidoListarComponent},\r\n   {path: \"clientes\", component: PedidoListarComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PedidoListarRoutingModule { }\r\n","import { Component, OnInit, ɵbypassSanitizationTrustResourceUrl } from \"@angular/core\";\r\n\r\nimport { Page, PageRequest } from \"../../../_util/Pagination\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { take } from \"rxjs/operators\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Pedido } from '../../pedido.model';\r\nimport { Router } from '@angular/router';\r\nimport { PedidoService } from '../../pedido.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ConfirmDialogModel, ConfirmDialogComponent } from 'src/app/_shared/confirm-dialog/confirm-dialog.component';\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { isAfter, isBefore, differenceInHours, format, parseISO } from 'date-fns';\r\n\r\n@Component({\r\n    selector: 'app-pedido-listar',\r\n    templateUrl: './pedido-listar.component.html',\r\n    styleUrls: ['./pedido-listar.component.css']\r\n})\r\nexport class PedidoListarComponent implements OnInit {\r\n    // import { format, parseISO } from 'date-fns'\r\n    // const formattedDate = format(parseISO('2019-02-11T14:00:00'), 'MM/dd/yyyy HH:mm');\r\n    // console.log(formattedDate)\r\n\r\n\r\n    colunasTabela = [\"select\", \"numero\", \"desconto\",\"precoestimado\",\"precofinal\" ,\"datapedido\", \"dataAtualizacao\", \"status\", \"action\"];\r\n\r\n    page: Page<Pedido> = new Page([], 0);\r\n    pageEvent: PageEvent;\r\n    sortEvent: Sort;\r\n\r\n    carregando = false;\r\n    selection = new SelectionModel<Pedido>(true, []);\r\n\r\n\r\n    constructor(private pedidoService: PedidoService,\r\n        public dialog: MatDialog,\r\n\r\n        private router: Router,\r\n        private matSnackBar: MatSnackBar) { }\r\n\r\n    ngOnInit() {\r\n        this.listarItens();\r\n        //  this.selection = new SelectionModel<Pedido>(true, []);\r\n\r\n    }\r\n\r\n    isAllSelected() {\r\n        const numSelected = this.selection.selected.length;\r\n        const numRows = this.page.content.length;\r\n        return numSelected === numRows;\r\n    }\r\n\r\n    masterToggle() {\r\n        this.isAllSelected() ?\r\n            this.selection.clear() :\r\n            this.page.content.forEach(row => this.selection.select(row));\r\n    }\r\n\r\n    alterarSituacao(situacao: string) {\r\n        const numSelected = this.selection.selected.length;\r\n        const novaSituacao = situacao;\r\n        if (numSelected === 0) {\r\n            this.matSnackBar.open(\"Favor selecionar o(s) pedido(s) !\", null, {\r\n                duration: 3000,\r\n                panelClass: \"green-snackbar\",\r\n            });\r\n        } else {\r\n            let pedidos = [];\r\n            this.selection.selected.forEach(row => {\r\n                if (novaSituacao === 'ABERTO' && this.isDataValida(row.dataInclusao)) {\r\n                    row.status = novaSituacao;\r\n                    pedidos.push(row);\r\n                }\r\n                if (novaSituacao === 'FINALIZADO') {\r\n                    row.status = novaSituacao;\r\n                    pedidos.push(row);\r\n                }\r\n\r\n            });\r\n\r\n            if (pedidos.length > 0) {\r\n                this.pedidoService.alterarSituacao(pedidos).subscribe(res => {\r\n                    if (res) {\r\n                        this.matSnackBar.open(\"Pedido Atualizado com sucesso!\", null, {\r\n                            duration: 5000,\r\n                            panelClass: \"green-snackbar\",\r\n                        });\r\n\r\n                    }\r\n                });\r\n            } else {\r\n                this.listarItens();\r\n\r\n                this.matSnackBar.open(\"Pedidos Não podem ser Atualizados\", null, {\r\n                    duration: 5000,\r\n                    panelClass: \"green-snackbar\",\r\n                });\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    isDataValida(dataPedido: any) {\r\n        const today = format(new Date(), \"yyyy/MM/dd HH:mm\");\r\n        const dataInclusao = format(new Date(dataPedido), \"yyyy/MM/dd HH:mm\");\r\n\r\n        const result = differenceInHours(\r\n            new Date(today),\r\n            new Date(dataInclusao)\r\n        )\r\n\r\n\r\n        if (result <= 24) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    listarItens() {\r\n        this.carregando = true;\r\n        let queryAdicional;\r\n        this.pedidoService\r\n            .listar(\r\n                new PageRequest(\r\n                    {\r\n                        pageNumber: this.pageEvent ? this.pageEvent.pageIndex : 0,\r\n                        pageSize: this.pageEvent ? this.pageEvent.pageSize : 5,\r\n                    },\r\n                    {\r\n                        property: this.sortEvent ? this.sortEvent.active : \"numero\",\r\n                        direction: this.sortEvent ? this.sortEvent.direction : \"asc\",\r\n                    },\r\n                    queryAdicional\r\n                )\r\n            )\r\n            .pipe(take(1))\r\n            .subscribe(\r\n                (page) => {\r\n                    this.page = page;\r\n                    this.carregando = false;\r\n                },\r\n                (error) => {\r\n                    this.page = new Page([], 0);\r\n                    this.carregando = false;\r\n                    this.matSnackBar.open(\"Erro ao listar Pedidos\", null, {\r\n                        duration: 5000,\r\n                        panelClass: \"red-snackbar\",\r\n                    });\r\n                }\r\n            );\r\n    }\r\n\r\n    onDelete($key) {\r\n        const message = `Tem certeza que deseja excluir esse registro?`;\r\n        const dialogData = new ConfirmDialogModel(\"Confirma ?\", message);\r\n\r\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n            maxWidth: \"400px\",\r\n            data: dialogData\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(res => {\r\n            if (res) {\r\n                this.pedidoService.deletar($key).subscribe(() => {\r\n                    this.listarItens();\r\n                    this.matSnackBar.open(\"Excluído com sucesso!\", null, {\r\n                        duration: 5000,\r\n                        panelClass: \"green-snackbar\",\r\n                    });\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n}\r\n","<div class=\"example-button-row right\">\r\n  <button mat-fab color=\"success\" routerLink=\"/pedidos/cadastrar\">\r\n    <mat-icon>add</mat-icon>\r\n  </button>\r\n</div>\r\n<div class=\"title-group\">\r\n  <h1 class=\"mat-h1\">Lista de Pedidos</h1>\r\n  <mat-divider fxFlex=\"1 0\"></mat-divider>\r\n</div>\r\n<div>\r\n  <button type=\"button\" mat-raised-button (click)=\"alterarSituacao('FINALIZADO')\">Finalizar</button>\r\n  <button type=\"button\" mat-raised-button (click)=\"alterarSituacao('ABERTO')\">Reabrir</button>\r\n</div>\r\n<div class=\"mat-elevation-z4\">\r\n\r\n  <table mat-table [dataSource]=\"page.content\" matSort (matSortChange)=\"sortEvent = $event; listarItens();\">\r\n    <ng-container matColumnDef=\"select\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\"\r\n          [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\r\n        </mat-checkbox>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n          [checked]=\"selection.isSelected(row)\">\r\n        </mat-checkbox>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"numero\">\r\n      <th mat-header-cell *matHeaderCellDef>Número</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.numero}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"desconto\">\r\n      <th mat-header-cell *matHeaderCellDef>Desconto</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.desconto}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"precoestimado\">\r\n      <th mat-header-cell *matHeaderCellDef>Preço Estimado</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.precoestimado | currency: 'R$'}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"precofinal\">\r\n      <th mat-header-cell *matHeaderCellDef>Preço Final</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.precofinal | currency: 'R$'}}</td>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"datapedido\">\r\n      <th mat-header-cell *matHeaderCellDef>Data Pedido</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.dataInclusao|date:'dd/MM/yyyy HH:mm'}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"dataAtualizacao\">\r\n      <th mat-header-cell *matHeaderCellDef>Atualizado em</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.dataAtualizacao | date:'dd/MM/yyyy HH:mm'}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"status\">\r\n      <th mat-header-cell *matHeaderCellDef>Situação</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.status}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Action Column -->\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef>Ações</th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <a routerLink=\"/pedidos/editar/{{ row.id }}\" class=\"edit\">\r\n          <i class=\"material-icons\">\r\n            edit\r\n          </i>\r\n        </a>\r\n        <button mat-icon-button color=\"warn\" (click)=\"onDelete(row.id)\">\r\n          <mat-icon>delete_outline</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"colunasTabela\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: colunasTabela;\"></tr>\r\n  </table>\r\n</div>","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable, EMPTY } from \"rxjs\";\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { QueryBuilder, Page } from '../_util/Pagination';\r\nimport { environment } from 'src/environments/environment';\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Produto } from '../interfaces/produto.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProdutoService {\r\n    private baseURL = environment.api.apiUrl;\r\n\r\n    private endpoint = 'produtos';\r\n\r\n\r\n    constructor(private snackBar: MatSnackBar,\r\n        private httpClient: HttpClient) { }\r\n\r\n    listar(queryBuilder: QueryBuilder): Observable<Page<Produto>> {\r\n\r\n        return this.httpClient\r\n            .get<Produto[]>(`${this.baseURL}/${this.endpoint}?${queryBuilder.buildQueryString()}`, { observe: 'response' })\r\n            .pipe(\r\n                map(response => <Page<Produto>>Page.fromResponse(response))\r\n            );\r\n\r\n    }\r\n\r\n    cadastrar(produto: Produto): Observable<HttpResponse<Produto>> {\r\n        return this.httpClient.post<Produto>(`${this.baseURL}/${this.endpoint}`, produto, {\r\n            observe: 'response'\r\n        });\r\n    }\r\n\r\n    // save(documentoAmbiental: DocumentoAmbientalResource): Observable<EntityResponseType> {\r\n    //     return this.http.post<DocumentoAmbientalResource>(this.resourceUrl, documentoAmbiental, {\r\n    //       observe: 'response'\r\n    //     });\r\n    //   }\r\n\r\n    //   delete(documentoAmbiental: DocumentoAmbientalResource): Observable<EntityResponseType> {\r\n    //     return this.http.delete<DocumentoAmbientalResource>(\r\n    //       this.resourceUrl + '/' + documentoAmbiental.id,\r\n    //       {\r\n    //         observe: 'response'\r\n    //       }\r\n    //     );\r\n    //   }\r\n\r\n    pesquisarPorId(id: string): Observable<Produto> {\r\n        return this.httpClient.get<Produto>(`${this.baseURL}/${this.endpoint}/${id}`);\r\n    }\r\n    pesquisarPorCod(cod: number): Observable<Produto> {\r\n        return this.httpClient.get<Produto>(`${this.baseURL}/${this.endpoint}/${cod}/cod`);\r\n    }\r\n\r\n    atualizar(produto: Produto): Observable<Produto> {\r\n        const result = this.httpClient.post<Produto>(`${this.baseURL}/${this.endpoint}`, produto);\r\n        return result;\r\n    }\r\n\r\n    deletar(_id: string): Observable<{}> {\r\n        return this.httpClient.delete(`${this.baseURL}/${this.endpoint}/${_id}`);\r\n    }\r\n    uploadImage(file: any): Observable<any> {\r\n        return this.httpClient.post<any>(`${this.baseURL}/${this.endpoint}/upload`, file);\r\n    }\r\n    getProdutos(): Observable<Produto[]> {\r\n        return this.httpClient.get<Produto[]>(`${this.baseURL}/${this.endpoint}`).pipe(\r\n            map((obj) => obj),\r\n            catchError((e) => this.errorHandler(e))\r\n        );\r\n    }\r\n    showMessage(msg: string, isError: boolean = false): void {\r\n        this.snackBar.open(msg, \"X\", {\r\n            duration: 3000,\r\n            horizontalPosition: \"right\",\r\n            verticalPosition: \"top\",\r\n            panelClass: isError ? [\"msg-error\"] : [\"msg-success\"],\r\n        });\r\n    }\r\n    errorHandler(e: any): Observable<any> {\r\n        this.showMessage(\"Ocorreu um erro!\", true);\r\n        return EMPTY;\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PedidoListarRoutingModule } from './pedido-listar-routing.module';\r\nimport { PedidoListarComponent } from './components/pedido-listar.component';\r\nimport { MaterialModule } from 'src/app/material-module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [PedidoListarComponent],\r\n  imports: [\r\n    MaterialModule,\r\n    CommonModule,\r\n    PedidoListarRoutingModule\r\n  ]\r\n})\r\nexport class PedidoListarModule { }\r\n"],"sourceRoot":"webpack:///"}