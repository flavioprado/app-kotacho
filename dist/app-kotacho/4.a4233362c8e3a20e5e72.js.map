{"version":3,"sources":["./src/app/categoria/categoria-cad-edit/categoria-cad-edit-routing.module.ts","./src/app/categoria/categoria-cad-edit/categoria-cad-edit.module.ts","./src/app/categoria/categoria-cad-edit/componentes/categoria-cad-edit.component.ts","./src/app/categoria/categoria-cad-edit/componentes/categoria-cad-edit.component.html"],"names":[],"mappings":"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","file":"4.a4233362c8e3a20e5e72.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CategoriaCadEditComponent } from './componentes/categoria-cad-edit.component';\nconst routes: Routes = [\n  {path: \"\", component: CategoriaCadEditComponent}\n];\n\n@NgModule({\n imports: [RouterModule.forChild(routes)],\n exports: [RouterModule]\n})\nexport class CategoriaCadEditRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { MaterialModule } from 'src/app/material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMaskModule, IConfig } from 'ngx-mask'\nimport { CategoriaCadEditRoutingModule } from './categoria-cad-edit-routing.module';\nimport { CategoriaCadEditComponent } from './componentes/categoria-cad-edit.component';\n \nconst maskConfig: Partial<IConfig> = {\n  validation: false,\n};\n\n\n@NgModule({\n  declarations: [CategoriaCadEditComponent],\n  imports: [\n    NgxMaskModule.forRoot(maskConfig),\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    CategoriaCadEditRoutingModule,\n  ]\n})\nexport class CategoriaCadEditModule { }\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { DialogoConfirmacaoComponent } from 'src/app/_shared/dialogo-confirmacao/dialogo-confirmacao.component';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Categoria } from '../../categoria.model';\nimport { CategoriaService } from '../../categoria.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Endereco } from 'src/app/interfaces/endereco.model';\nimport * as _ from 'lodash';\nimport { CpfCnpjValidator } from 'src/app/_validators/cpf-cnpj.validator';\nimport { CepService } from '../../../../cep/cep.service';\n\n\n@Component({\n    selector: 'app-categoria-cad-edit',\n    templateUrl: './categoria-cad-edit.component.html',\n    styleUrls: ['./categoria-cad-edit.component.css']\n})\nexport class CategoriaCadEditComponent implements OnInit {\n    @ViewChild(\"name\") nameField: ElementRef;\n\n\n    emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\n    formCadastro: FormGroup;\n    categoria: Categoria;\n    endereco: Endereco;\n    labelForm: string;\n\n    constructor(\n        private fb: FormBuilder,\n        private categoriaService: CategoriaService,\n        private router: Router,\n        private route: ActivatedRoute,\n        public matDialog: MatDialog,\n        public matSnackBar: MatSnackBar\n    ) { }\n\n    ngOnInit() {\n\n        let id = this.route.snapshot.paramMap.get('id');\n\n        this.labelForm = id ? 'Editar' : 'Cadastrar';\n\n        if (id) {\n            this.loadCategoria(id);\n        }\n\n        this.buildForm();\n\n    }\n    // editName(): void {\n    //     this.nameField.nativeElement.focus();\n    //   }\n\n    loadCategoria(id) {\n        this.categoriaService.pesquisarPorId(id).subscribe((categoria) => {\n            this.categoria = categoria;\n            this.loadObjectInForm(categoria);\n        })\n    }\n\n    ngAfterViewInit() {\n        // this.nameField.nativeElement.focus();\n    }\n    private setValueOnForm(form: FormGroup, pathOnForm: string, value: any) {\n        if (value) {\n            form.get(pathOnForm).setValue(value);\n        }\n    }\n    private loadObjectInForm(categoria: Categoria) {\n        this.formCadastro.patchValue(categoria);\n    }\n\n    buildForm() {\n        this.formCadastro = this.fb.group({\n            id: null,\n            nome: [\"\", Validators.required],            \n            ativo: [true, [Validators.required]],          \n        });\n    }\n\n  \n    salvar() {\n        const {\n            nome,\n            ativo\n        } = this.formCadastro.value;\n\n        const categoria = {\n            nome,\n            ativo,\n        } as Categoria;\n\n\n\n        if (this.categoria && this.categoria.id) {\n            this.categoriaService.atualizar(categoria).subscribe(\n                (itemAtualizado) => {\n                    this.matSnackBar.open(\"Atualizado com sucesso!\", null, {\n                        duration: 5000,\n                        panelClass: \"green-snackbar\",\n                    });\n                    this.router.navigateByUrl(\"/categorias\");\n                },\n                (error) => {\n                    this.matSnackBar.open(\"Erro ao atualizar\", null, {\n                        duration: 5000,\n                        panelClass: \"red-snackbar\",\n                    });\n                }\n            );\n        } else {\n            this.categoriaService.cadastrar(this.formCadastro.value).subscribe(\n                (itemCadastrado) => {\n                    this.matSnackBar.open(\"Cadastrado com sucesso!\", null, {\n                        duration: 5000,\n                        panelClass: \"green-snackbar\",\n                    });\n                    this.router.navigateByUrl(\"/categorias\");\n                },\n                (error) => {\n                    this.matSnackBar.open(\"Erro ao cadastrar\", null, {\n                        duration: 5000,\n                        panelClass: \"red-snackbar\",\n                    });\n                }\n            );\n        }\n    }\n\n    deletar() {\n        const dialogoReferencia = this.matDialog.open(DialogoConfirmacaoComponent);\n\n        dialogoReferencia.afterClosed().subscribe((valorResposta) => {\n            if (valorResposta) {\n                this.categoriaService.deletar(this.categoria).subscribe(\n                    (response) => {\n                        this.matSnackBar.open(\"Item deletado com sucesso!\", null, {\n                            duration: 5000,\n                            panelClass: \"green-snackbar\",\n                        });\n                        this.router.navigateByUrl(\"/itens\");\n                    },\n                    (error) => {\n                        this.matSnackBar.open(\"Erro ao deletar\", null, {\n                            duration: 5000,\n                            panelClass: \"red-snackbar\",\n                        });\n                    }\n                );\n            }\n        });\n    }\n}\n","<!-- Title group  -->\n<div class=\"title-group\">\n    <h1 class=\"mat-h1\">{{labelForm}} Categoria</h1>\n    <mat-divider fxFlex=\"1 0\"></mat-divider>\n</div>\n\n<!-- Form -->\n<div class=\"inner-wrapper\">\n    <form [formGroup]=\"formCadastro\" (ngSubmit)=\"formCadastro.valid && salvar()\" #resetFormCadastro=\"ngForm\" novalidate>\n        <!-- Left block -->\n        <mat-card>\n            <div class=\"controlers-wrapper\">\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Nome</mat-label>\n                    <input matInput placeholder=\"Nome\" formControlName=\"nome\" required #name>\n                    <mat-error>Nome é obrigatório</mat-error>\n                </mat-form-field>\n                <section class=\"example-section\">\n                    <mat-label>Ativo</mat-label>\n                    <mat-checkbox id=\"ativo\" class=\"ativo\" color=\"primary\" formControlName=\"ativo\">\n                    </mat-checkbox>\n                    <mat-error>\n                    </mat-error>\n                </section>\n            </div>\n        </mat-card>\n\n\n        <mat-card-actions>\n            <button mat-raised-button color=\"primary\" [disabled]=\"!formCadastro.valid\">Salvar</button>\n            <button type=\"button\" mat-raised-button routerLink=\"/categorias\">Cancelar</button>\n        </mat-card-actions>\n\n\n        <!-- Submit & Reset -->\n        <!-- <mat-card>\n            <div class=\"full-wrapper button-wrapper\">\n                <div class=\"button-wrapper\">\n                    <button mat-flat-button color=\"warn\">Salvar</button>\n                </div>\n            </div>\n        </mat-card>  -->\n    </form>\n</div>"],"sourceRoot":"webpack:///"}