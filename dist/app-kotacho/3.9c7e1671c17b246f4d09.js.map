{"version":3,"sources":["./src/app/pedido/pedido-cad-edit/componentes/pedido-cad-edit.component.ts","./src/app/pedido/pedido-cad-edit/componentes/pedido-cad-edit.component.html","./src/app/item-table/item-table.component.ts","./src/app/item-table/item-table.component.html","./src/app/pedido/pedido-cad-edit/pedido-cad-edit-routing.module.ts","./src/app/pedido/pedido-cad-edit/pedido-cad-edit.module.ts"],"names":[],"mappings":"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","file":"3.9c7e1671c17b246f4d09.js","sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { DialogoConfirmacaoComponent } from 'src/app/_shared/dialogo-confirmacao/dialogo-confirmacao.component';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Pedido } from '../../pedido.model';\nimport { PedidoService } from '../../pedido.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Endereco } from 'src/app/interfaces/endereco.model';\nimport * as _ from 'lodash';\nimport { Item } from 'src/app/model/item';\nimport { Cliente } from 'src/app/cliente/cliente.model';\nimport { ClienteService } from 'src/app/cliente/cliente.service';\nimport { Produto } from 'src/app/interfaces/produto.model';\nimport { ProdutoService } from 'src/app/produto/produto.service';\nimport { Renderer2 } from '@angular/core';\n\n\n@Component({\n    selector: 'app-pedido-cad-edit',\n    templateUrl: './pedido-cad-edit.component.html',\n    styleUrls: ['./pedido-cad-edit.component.css']\n})\nexport class PedidoCadEditComponent implements OnInit {\n    @ViewChild(\"name\") nameField: ElementRef;\n\n\n    emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\n    formCadastro: FormGroup;\n    item: Item;\n    pedido: Pedido;\n    endereco: Endereco;\n    labelForm: string;\n    produto: Produto;\n\n    clientes = Array<Cliente>();\n    produtos = Array<Produto>();\n    itens = Array<Item>();\n    statusList = [];\n\n    constructor(\n        private renderer: Renderer2,\n        private fb: FormBuilder,\n        private pedidoService: PedidoService,\n        private produtoService: ProdutoService,\n        private clienteService: ClienteService,\n        private router: Router,\n        private route: ActivatedRoute,\n        public matDialog: MatDialog,\n        public matSnackBar: MatSnackBar\n    ) {\n        this.itens = [];\n        this.statusList.push('ABERTO');\n        this.statusList.push('FINALIZADO');\n\n    }\n\n    ngOnInit() {\n\n        let id = this.route.snapshot.paramMap.get('id');\n\n        this.labelForm = id ? 'Editar' : 'Cadastrar';\n\n        if (id) {\n            this.loadPedido(id);\n        } else {\n            this.initPedido();\n        }\n\n        this.buildForm();\n        //  this.renderer.selectRootElement('#myInput').focus();\n        this.loadClientes();\n        this.loadProdutos();\n\n    }\n\n    // editName(): void {\n    //     this.nameField.nativeElement.focus();\n    //   }\n\n    loadPedido(id) {\n        this.pedidoService.pesquisarPorId(id).subscribe((pedido) => {\n            this.pedido = pedido;\n            this.populateForm(pedido);\n        })\n    }\n    onChangeProduto(event: { value: Produto; }) {\n        this.produto = event.value;\n        this.formCadastro.get('item').patchValue(this.produto);\n        this.formCadastro.get('item').patchValue({\n            precoEstimado: this.produto.precoVenda\n        });\n    }\n\n    ngAfterViewInit() {\n        // this.nameField.nativeElement.focus();\n    }\n    private setValueOnForm(form: FormGroup, pathOnForm: string, value: any) {\n        if (value) {\n            form.get(pathOnForm).setValue(value);\n        }\n    }\n    private populateForm(pedido: Pedido) {\n        this.formCadastro.patchValue(pedido);\n        // this.formCadastro.get('item').patchValue(pedido.itens);\n    }\n\n    onKey($event) {\n        const qtde = this.formCadastro.get('item.quantidade').value;\n        const preco = this.formCadastro.get('item.precoEstimado').value;\n        const subTotal = (qtde * preco);\n        this.formCadastro.get('item.subTotal').setValue(subTotal);\n    }\n\n    buildForm() {\n        this.formCadastro = this.fb.group({\n            id: null,\n            numero: [],\n            cliente: [\"\", Validators.required],\n            status: [this.statusList[0], Validators.required],\n            desconto: [],\n            total: [null, Validators.required],\n            obs: [\"\"],\n\n            item: this.fb.group({\n                produto: [null],\n                precoEstimado: [null],\n                quantidade: [null],\n                medida: [null],\n                subTotal: [null],\n            })\n        });\n    }\n\n\n    loadClientes() {\n        this.clienteService.getClientes().subscribe(clientes => this.clientes = clientes);\n    }\n\n    async loadProdutos() {\n        await this.produtoService.getProdutos().subscribe(produtos => this.produtos = produtos);\n\n    }\n\n\n    onAddItem() {\n        const item = this.createItem();\n        if (!this.pedido.itens) {\n            this.pedido.itens = [];\n        }\n        this.pedido.itens.push(item);\n    }\n\n    initPedido() {\n        this.pedido = {\n            numero: null,\n            itens: [],\n            status: 'ABERTO',\n            desconto: null,\n            valorTotal: null\n        }\n\n    }\n\n    createItem() {\n        const {\n            prdId,\n            quantidade,\n            precoEstimado,\n            subTotal\n        } = this.formCadastro.get('item').value;\n\n        const item = {\n            prdId,\n            quantidade,\n            precoEstimado,\n            subTotal\n        } as Item;\n\n        return item;\n    }\n\n    deleteItem(item: Item) {\n        // this.personService.removeAddress(address);\n    }\n\n\n    salvar() {\n        const {\n            numero,\n            status,\n            item\n\n        } = this.formCadastro.value;\n\n        const pedido = {\n            numero,\n            status\n\n\n        } as Pedido;\n\n        pedido.id = this.formCadastro.get('id').value;\n\n\n        if (this.pedido && this.pedido.id) {\n            this.pedidoService.atualizar(pedido).subscribe(\n                (itemAtualizado) => {\n                    this.matSnackBar.open(\"Atualizado com sucesso!\", null, {\n                        duration: 5000,\n                        panelClass: \"green-snackbar\",\n                    });\n                    this.router.navigateByUrl(\"/pedidos\");\n                },\n                (error) => {\n                    this.matSnackBar.open(\"Erro ao atualizar\", null, {\n                        duration: 5000,\n                        panelClass: \"red-snackbar\",\n                    });\n                }\n            );\n        } else {\n            this.pedidoService.cadastrar(this.formCadastro.value).subscribe(\n                (itemCadastrado) => {\n                    this.matSnackBar.open(\"Cadastrado com sucesso!\", null, {\n                        duration: 5000,\n                        panelClass: \"green-snackbar\",\n                    });\n                    this.router.navigateByUrl(\"/pedidos\");\n                },\n                (error) => {\n                    this.matSnackBar.open(\"Erro ao cadastrar\", null, {\n                        duration: 5000,\n                        panelClass: \"red-snackbar\",\n                    });\n                }\n            );\n        }\n    }\n\n    deletar() {\n        const dialogoReferencia = this.matDialog.open(DialogoConfirmacaoComponent);\n\n        dialogoReferencia.afterClosed().subscribe((valorResposta) => {\n            if (valorResposta) {\n                this.pedidoService.deletar(this.pedido.id).subscribe(\n                    (response) => {\n                        this.matSnackBar.open(\"Item deletado com sucesso!\", null, {\n                            duration: 5000,\n                            panelClass: \"green-snackbar\",\n                        });\n                        this.router.navigateByUrl(\"/itens\");\n                    },\n                    (error) => {\n                        this.matSnackBar.open(\"Erro ao deletar\", null, {\n                            duration: 5000,\n                            panelClass: \"red-snackbar\",\n                        });\n                    }\n                );\n            }\n        });\n    }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <h1 class=\"mat-h2\">{{labelForm}} Pedido</h1>\n</div>\n{{formCadastro.value|json}}\n<div>\n  <form fxLayout=\"column\" [formGroup]=\"formCadastro\">\n    <mat-card class=\"top-card\">\n      <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"15px\" fxLayoutGap.lt-md=\"0px\">\n        <mat-form-field fxFlex=\"20\" appearance=\"outline\">\n          <mat-label>Nº Pedido</mat-label>\n          <input matInput type=\"text\" placeholder=\"numero\" formControlName=\"numero\">\n        </mat-form-field>\n        <mat-form-field fxFlex=\"20\" appearance=\"outline\">\n          <mat-label>Status</mat-label>\n          <mat-select formControlName=\"status\" required>\n            <mat-option *ngFor=\"let status of statusList\" [value]=\"status\">\n              {{status}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field fxFlex=\"40\" appearance=\"outline\">\n          <mat-label>Cliente</mat-label>\n          <mat-select formControlName=\"cliente\" required>\n            <mat-option *ngFor=\"let cliente of clientes\" [value]=\"cliente.cli_id\">\n              {{cliente.nome}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n      </div>\n    </mat-card>\n\n    <br>\n    <br>\n\n    <mat-card formGroupName=\"item\" class=\"top-card\">\n      <mat-card-header>\n        <mat-card-title>Produto</mat-card-title>\n      </mat-card-header>\n\n      <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"30px\" fxLayoutGap.lt-md=\"0px\">\n        <mat-form-field fxFlex=\"20\" appearance=\"outline\">\n          <mat-label>Produto</mat-label>\n          <mat-select formControlName=\"produto\" #product (selectionChange)='onChangeProduto($event)' required>\n            <mat-option *ngFor=\"let produto of produtos\" [value]=\"produto\">\n              {{produto.nome}} - ({{produto.medida}})\n            </mat-option>\n          </mat-select>          \n        </mat-form-field>\n\n        <mat-form-field fxFlex=\"10\" appearance=\"outline\">\n          <mat-label>Quantidade</mat-label>\n          <input matInput placeholder=\"quantidade\" (keyup)=\"onKey($event)\" id=\"myInput\" formControlName=\"quantidade\"\n            required>\n        </mat-form-field>\n        <span>X</span>\n\n        <mat-form-field fxFlex=\"10\" appearance=\"outline\">\n          <mat-label>Preço Venda Estimado</mat-label>\n          <input matInput currencyMask placeholder=\"Preço Venda Estimado\" formControlName=\"precoEstimado\"\n            [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" readonly>\n        </mat-form-field>\n        <mat-form-field fxFlex=\"10\" appearance=\"outline\">\n          <mat-label>SubTotal</mat-label>\n          <input matInput currencyMask placeholder=\"SubTotal\" formControlName=\"subTotal\"\n          [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" readonly>\n        </mat-form-field>\n        <button mat-stroked-button color=\"primary\" (click)=\"onAddItem()\">\n          <mat-icon>add_circle</mat-icon>\n          Adicionar Item\n        </button>\n      </div>\n       <p>TOTAL: </p>\n    </mat-card>\n    <app-item-table [form]=\"formCadastro\"></app-item-table>\n  </form>\n</div>\n\n\n\n\n<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <div fxFlex=\"50%\">TITULO 1</div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { DataSource } from '@angular/cdk/table';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\nimport { FormGroup } from '@angular/forms';\r\nimport { PedidoService } from '../pedido/pedido.service';\r\nimport { Item } from '../model/item';\r\n\r\n@Component({\r\n  selector: 'app-item-table',\r\n  templateUrl: './item-table.component.html',\r\n  styleUrls: ['./item-table.component.css']\r\n})\r\nexport class ItemTableComponent implements OnInit {\r\n  // ngOnInit(): void {\r\n  //   throw new Error('Method not implemented.');\r\n  // }\r\n\r\n  @Input() form: FormGroup;\r\n  id: string;\r\n\r\n\r\n  displayedColumns: string[] = ['produto', 'qtde', 'subtotal', 'actions'];\r\n\r\n\r\n\r\n  constructor(private pedidoService: PedidoService) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.id = this.form.get('id').value;\r\n    new ItemDataSource(this.pedidoService, this.id);\r\n  }\r\n\r\n  onDeleteItem(item: Item) {\r\n    this.pedidoService.removeItem(item);\r\n  }\r\n\r\n  onEditItem(item: Item) {\r\n    //  this.pedidoService.removeItem(item);\r\n    this.form.get('item').patchValue(item);\r\n  }\r\n}\r\n\r\nexport class ItemDataSource extends DataSource<any> {\r\n\r\n  constructor(\r\n    private pedidoService: PedidoService,\r\n    private id: string) {\r\n    super();\r\n  }\r\n\r\n  connect(): Observable<Item[] | readonly Item[]> {\r\n    return this.pedidoService.loadItens(this.id);\r\n  }\r\n\r\n  disconnect() {\r\n    this.pedidoService.OnDestroy();\r\n  }\r\n\r\n}\r\n","  <table mat-table   class=\"mat-elevation-z8\" >\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"produto\">\r\n      <th mat-header-cell *matHeaderCellDef> Produto </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.nome}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"qtde\">\r\n      <th mat-header-cell *matHeaderCellDef> Quantidade </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.quantidade}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"subtotal\">\r\n      <th mat-header-cell *matHeaderCellDef> Subtotal </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.subtotal}} </td>\r\n    </ng-container>\r\n\r\n  \r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"actions\">\r\n      <th mat-header-cell  *matHeaderCellDef>Actions </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <button mat-icon-button (click)=\"onEditItem(element)\" class=\"iconbutton\" color=\"primary\">\r\n            <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button (click)=\"onDeleteItem(element)\" class=\"iconbutton\" color=\"warn\">\r\n            <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n     <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr> \r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr> \r\n  </table>\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PedidoCadEditComponent } from './componentes/pedido-cad-edit.component';\nconst routes: Routes = [\n  {path: \"\", component: PedidoCadEditComponent}\n];\n\n@NgModule({\n imports: [RouterModule.forChild(routes)],\n exports: [RouterModule]\n})\nexport class PedidoCadEditRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PedidoCadEditRoutingModule } from './pedido-cad-edit-routing.module';\nimport { PedidoCadEditComponent } from './componentes/pedido-cad-edit.component';\nimport { MaterialModule } from 'src/app/material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMaskModule, IConfig } from 'ngx-mask'\nimport { ItemTableComponent } from 'src/app/item-table/item-table.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgxCurrencyModule } from 'ngx-currency';\n\nconst maskConfig: Partial<IConfig> = {\n  validation: false,\n};\n\n\n@NgModule({\n  declarations: [PedidoCadEditComponent, ItemTableComponent],\n  imports: [\n    NgxMaskModule.forRoot(maskConfig),\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    PedidoCadEditRoutingModule,\n    FlexLayoutModule,\n    NgxCurrencyModule\n  ]\n})\nexport class PedidoCadEditModule { }\n"],"sourceRoot":"webpack:///"}