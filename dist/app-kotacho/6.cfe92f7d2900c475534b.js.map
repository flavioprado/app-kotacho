{"version":3,"sources":["./src/app/_util/Pagination.ts","./src/app/_shared/mat-confirm-dialog/mat-confirm.module..ts","./src/app/produto/produto-listar/produto-listar-routing.module.ts","./src/app/produto/produto.service.ts","./src/app/produto/produto-listar/produto-listar.module.ts","./src/app/produto/produto-listar/components/produto-listar.component.ts","./src/app/produto/produto-listar/components/produto-listar.component.html"],"names":[],"mappings":"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","file":"6.cfe92f7d2900c475534b.js","sourcesContent":["export interface SortQuery {\r\n    property: string,\r\n    direction: string\r\n}\r\n\r\nexport interface PageQuery {\r\n    pageNumber: number,\r\n    pageSize: number\r\n}\r\n\r\nexport interface QueryBuilder {\r\n    pageQuery: PageQuery;\r\n    sortQuery: SortQuery;\r\n    aditionalQuery: Map<string, string>;\r\n    buildQueryMap(): Map<string, string>;\r\n    buildQueryString(): string;\r\n    buildPageQueryMap(): Map<string, string>;\r\n    buildSortQueryMap(): Map<string, string>;\r\n}\r\n\r\nexport class PageRequest implements QueryBuilder {\r\n\r\n    constructor(public pageQuery: PageQuery, public sortQuery: SortQuery, public aditionalQuery: Map<string, string>) { }\r\n\r\n    buildQueryMap(): Map<string, string> {\r\n\r\n        let buildQueryMap = new Map<string, string>([...this.buildPageQueryMap(), ...this.buildSortQueryMap()]);\r\n\r\n        if (this.aditionalQuery) {\r\n            buildQueryMap = new Map<string, string>([...buildQueryMap, ...this.aditionalQuery])\r\n        }\r\n\r\n        return buildQueryMap;\r\n    }\r\n\r\n    buildQueryString(): string {\r\n\r\n        return Array.from(this.buildQueryMap()).map(itemArray => `${itemArray[0]}=${itemArray[1]}`).join(\"&\");\r\n\r\n    }\r\n\r\n    buildPageQueryMap(): Map<string, string> {\r\n\r\n        let buildPageQueryMap = new Map<string, string>();\r\n\r\n        buildPageQueryMap.set(\"_page\", `${this.pageQuery.pageNumber + 1}`);\r\n        buildPageQueryMap.set(\"_limit\", `${this.pageQuery.pageSize}`);\r\n\r\n        return buildPageQueryMap;\r\n\r\n    }\r\n\r\n    buildSortQueryMap(): Map<string, string> {\r\n\r\n        let buildPageQueryMap = new Map<string, string>();\r\n\r\n        buildPageQueryMap.set(\"_sort\", `${this.sortQuery.property}`);\r\n        buildPageQueryMap.set(\"_order\", `${this.sortQuery.direction}`);\r\n\r\n        return buildPageQueryMap;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class Page<T> {\r\n\r\n    constructor(public content: T[], public totalElements: number){}\r\n\r\n    static fromResponse<T>(response:any){\r\n        return new Page<T>(response.body, parseInt(response.headers.get(\"X-Total-Count\")));\r\n    }\r\n    \r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MaterialModule } from 'src/app/material-module';\nimport { MatConfirmDialogComponent } from './mat-confirm-dialog.component';\n\n\n@NgModule({\n  declarations: [MatConfirmDialogComponent],\n  imports: [\n    MaterialModule,\n    CommonModule,\n  ],\n  exports: [MatConfirmDialogComponent]\n\n})\nexport class MatConfirmModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProdutoListarComponent } from './components/produto-listar.component';\n\nconst routes: Routes = [\n   {path: \"\", component: ProdutoListarComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProdutoListarRoutingModule { }\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable, EMPTY } from \"rxjs\";\nimport { catchError, map } from 'rxjs/operators';\nimport { QueryBuilder, Page } from '../_util/Pagination';\nimport { environment } from 'src/environments/environment';\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { Produto } from '../interfaces/produto.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProdutoService {\n    private baseURL = environment.api.appBackend;\n\n    private endpoint = 'produtos';\n\n\n    constructor(private snackBar: MatSnackBar,\n        private httpClient: HttpClient) { }\n\n    listar(queryBuilder: QueryBuilder): Observable<Page<Produto>> {\n\n        return this.httpClient\n            .get<Produto[]>(`${this.baseURL}/${this.endpoint}?${queryBuilder.buildQueryString()}`, { observe: 'response' })\n            .pipe(\n                map(response => <Page<Produto>>Page.fromResponse(response))\n            );\n\n    }\n\n    cadastrar(produto: Produto): Observable<Produto> {\n        return this.httpClient.post<Produto>(`${this.baseURL}/${this.endpoint}`, produto);\n    }\n\n    pesquisarPorId(id: string): Observable<Produto> {\n        return this.httpClient.get<Produto>(`${this.baseURL}/${this.endpoint}/${id}`);\n    }\n\n    atualizar(produto: Produto): Observable<Produto> {\n        const result = this.httpClient.post<Produto>(`${this.baseURL}/${this.endpoint}`, produto);\n        return result;\n    }\n    \n    deletar(_id:string): Observable<{}> {\n        return this.httpClient.delete(`${this.baseURL}/${this.endpoint}/${_id}`);\n    }\n    uploadImage(file:any): Observable<any> {\n        return this.httpClient.post<any>(`${this.baseURL}/${this.endpoint}/upload`, file);\n    }\n    getProdutos(): Observable<Produto[]> {\n        return this.httpClient.get<Produto[]>(`${this.baseURL}/${this.endpoint}`).pipe(\n            map((obj) => obj),\n            catchError((e) => this.errorHandler(e))\n        );\n    }\n    showMessage(msg: string, isError: boolean = false): void {\n        this.snackBar.open(msg, \"X\", {\n            duration: 3000,\n            horizontalPosition: \"right\",\n            verticalPosition: \"top\",\n            panelClass: isError ? [\"msg-error\"] : [\"msg-success\"],\n        });\n    }\n    errorHandler(e: any): Observable<any> {\n        this.showMessage(\"Ocorreu um erro!\", true);\n        return EMPTY;\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MaterialModule } from 'src/app/material-module';\nimport { ProdutoListarRoutingModule } from './produto-listar-routing.module';\nimport { ProdutoListarComponent } from './components/produto-listar.component';\nimport { MatConfirmModule } from 'src/app/_shared/mat-confirm-dialog/mat-confirm.module.';\n\n\n@NgModule({\n  declarations: [ProdutoListarComponent],\n  imports: [\n    MatConfirmModule,\n    MaterialModule,\n    CommonModule,\n    ProdutoListarRoutingModule\n  ]\n})\nexport class ProdutoListarModule { }\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { Page, PageRequest } from \"../../../_util/Pagination\";\nimport { PageEvent } from \"@angular/material/paginator\";\nimport { take } from \"rxjs/operators\";\nimport { Sort } from \"@angular/material/sort\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { Router } from '@angular/router';\nimport { Produto } from 'src/app/interfaces/produto.model';\nimport { ProdutoService } from '../../produto.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogService } from 'src/app/_shared/dialog.service';\n\n\n\n\n@Component({\n    selector: 'app-produto-listar',\n    templateUrl: './produto-listar.component.html',\n    styleUrls: ['./produto-listar.component.css']\n})\nexport class ProdutoListarComponent implements OnInit {\n\n    colunasTabela = [\"nome\", \"detalhe\", \"medida\", \"ativo\",\"precoCusto\" ,\"precoVenda\",\"action\"];\n\n    page: Page<Produto> = new Page([], 0);\n    pageEvent: PageEvent;\n    sortEvent: Sort;\n\n    carregando = false;\n    service: any;\n    notificationService: any;\n\n    constructor(private produtoService: ProdutoService,\n        private router: Router,\n        public matDialog: MatDialog,\n        private matSnackBar: MatSnackBar,\n        private dialogService: DialogService\n\n    ) { }\n\n    ngOnInit() {\n        this.listarItens();\n    }\n\n    listarItens() {\n        this.carregando = true;\n        let queryAdicional;\n        this.produtoService\n            .listar(\n                new PageRequest(\n                    {\n                        pageNumber: this.pageEvent ? this.pageEvent.pageIndex : 0,\n                        pageSize: this.pageEvent ? this.pageEvent.pageSize : 5,\n                    },\n                    {\n                        property: this.sortEvent ? this.sortEvent.active : \"numero\",\n                        direction: this.sortEvent ? this.sortEvent.direction : \"asc\",\n                    },\n                    queryAdicional\n                )\n            )\n            .pipe(take(1))\n            .subscribe(\n                (page) => {\n                    this.page = page;\n                    this.carregando = false;\n                },\n                (error) => {\n                    this.page = new Page([], 0);\n                    this.carregando = false;\n                    this.matSnackBar.open(\"Erro ao listar Produtos\", null, {\n                        duration: 5000,\n                        panelClass: \"red-snackbar\",\n                    });\n                }\n            );\n    }\n\n    onEdit(row) {\n        this.router.navigateByUrl(`produtos/editar/${row.id}`);     \n    }\n\n    onDelete($key) {\n        this.dialogService.openConfirmDialog('Tem certeza que deseja excluir esse registro?')\n            .afterClosed().subscribe(res => {\n                if (res ===\"true\") {\n                    this.produtoService.deletar($key).subscribe(() => {\n                        this.listarItens();\n                        this.matSnackBar.open(\"Excluído com sucesso!\", null, {\n                            duration: 5000,\n                            panelClass: \"green-snackbar\",\n                        });\n                    });\n                    // this.notificationService.warn('Excluído com Sucesso');\n                }\n            });\n    }\n}\n\n\n\n","<div class=\"mat-elevation-z4\">\n\n  <button button=\"submit\" mat-raised-button class=\"btn-success\" routerLink=\"/produtos/cadastrar\">\n    <mat-icon>add</mat-icon> Novo Produto\n  </button>\n\n  <table mat-table [dataSource]=\"page.content\" matSort (matSortChange)=\"sortEvent = $event; listarItens();\">\n    <!-- Id Column -->\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"nome\">\n      <th mat-header-cell *matHeaderCellDef>Nome</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"detalhe\">\n      <th mat-header-cell *matHeaderCellDef>Detalhe</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.detalhe}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"medida\">\n      <th mat-header-cell *matHeaderCellDef>Medida</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.medida}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"precoCusto\">\n      <th mat-header-cell *matHeaderCellDef>Preço Custo</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.precoCusto}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"precoVenda\">\n      <th mat-header-cell *matHeaderCellDef>Preço Venda</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.precoVenda}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"ativo\">\n      <th mat-header-cell *matHeaderCellDef>ativo</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.ativo?'SIM':'NÃO'}}</td>\n    </ng-container>\n\n    <!-- Action Column -->\n    <!-- <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Ações</th>\n      <td mat-cell *matCellDef=\"let row\">\n        <a routerLink=\"/produtos/editar/{{ row.id }}\" class=\"edit\">\n          <i class=\"material-icons\">\n            edit\n          </i>\n        </a>\n        <a (click)=\"excluir(row.id )\" class=\"delete\">\n          <i class=\"material-icons\">\n            delete\n          </i>\n        </a>\n      </td>\n    </ng-container> -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef>Ações</th>\n      <td mat-cell *matCellDef=\"let row\">\n        <button mat-icon-button (click)=\"onEdit(row)\">\n          <mat-icon>launch</mat-icon>\n        </button>\n        <button mat-icon-button color=\"warn\" (click)=\"onDelete(row.id)\">\n          <mat-icon>delete_outline</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"colunasTabela\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: colunasTabela;\"></tr>\n  </table>\n</div>"],"sourceRoot":"webpack:///"}