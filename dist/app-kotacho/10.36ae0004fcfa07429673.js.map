{"version":3,"sources":["./src/app/_util/Pagination.ts","./src/app/pedido/pedido-listar/pedido-listar-routing.module.ts","./src/app/pedido/pedido-listar/components/pedido-listar.component.ts","./src/app/pedido/pedido-listar/components/pedido-listar.component.html","./src/app/pedido/pedido-listar/pedido-listar.module.ts"],"names":[],"mappings":"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","file":"10.36ae0004fcfa07429673.js","sourcesContent":["export interface SortQuery {\r\n    property: string,\r\n    direction: string\r\n}\r\n\r\nexport interface PageQuery {\r\n    pageNumber: number,\r\n    pageSize: number\r\n}\r\n\r\nexport interface QueryBuilder {\r\n    pageQuery: PageQuery;\r\n    sortQuery: SortQuery;\r\n    aditionalQuery: Map<string, string>;\r\n    buildQueryMap(): Map<string, string>;\r\n    buildQueryString(): string;\r\n    buildPageQueryMap(): Map<string, string>;\r\n    buildSortQueryMap(): Map<string, string>;\r\n}\r\n\r\nexport class PageRequest implements QueryBuilder {\r\n\r\n    constructor(public pageQuery: PageQuery, public sortQuery: SortQuery, public aditionalQuery: Map<string, string>) { }\r\n\r\n    buildQueryMap(): Map<string, string> {\r\n\r\n        let buildQueryMap = new Map<string, string>([...this.buildPageQueryMap(), ...this.buildSortQueryMap()]);\r\n\r\n        if (this.aditionalQuery) {\r\n            buildQueryMap = new Map<string, string>([...buildQueryMap, ...this.aditionalQuery])\r\n        }\r\n\r\n        return buildQueryMap;\r\n    }\r\n\r\n    buildQueryString(): string {\r\n\r\n        return Array.from(this.buildQueryMap()).map(itemArray => `${itemArray[0]}=${itemArray[1]}`).join(\"&\");\r\n\r\n    }\r\n\r\n    buildPageQueryMap(): Map<string, string> {\r\n\r\n        let buildPageQueryMap = new Map<string, string>();\r\n\r\n        buildPageQueryMap.set(\"_page\", `${this.pageQuery.pageNumber + 1}`);\r\n        buildPageQueryMap.set(\"_limit\", `${this.pageQuery.pageSize}`);\r\n\r\n        return buildPageQueryMap;\r\n\r\n    }\r\n\r\n    buildSortQueryMap(): Map<string, string> {\r\n\r\n        let buildPageQueryMap = new Map<string, string>();\r\n\r\n        buildPageQueryMap.set(\"_sort\", `${this.sortQuery.property}`);\r\n        buildPageQueryMap.set(\"_order\", `${this.sortQuery.direction}`);\r\n\r\n        return buildPageQueryMap;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class Page<T> {\r\n\r\n    constructor(public content: T[], public totalElements: number){}\r\n\r\n    static fromResponse<T>(response:any){\r\n        return new Page<T>(response.body, parseInt(response.headers.get(\"X-Total-Count\")));\r\n    }\r\n    \r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PedidoListarComponent } from './components/pedido-listar.component';\r\n\r\nconst routes: Routes = [\r\n   {path: \"\", component: PedidoListarComponent},\r\n   {path: \"clientes\", component: PedidoListarComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PedidoListarRoutingModule { }\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\nimport { Page, PageRequest } from \"../../../_util/Pagination\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { take } from \"rxjs/operators\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Pedido } from '../../pedido.model';\r\nimport { Router } from '@angular/router';\r\nimport { PedidoService } from '../../pedido.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ConfirmDialogModel, ConfirmDialogComponent } from 'src/app/_shared/confirm-dialog/confirm-dialog.component';\r\n\r\n\r\n@Component({\r\n    selector: 'app-pedido-listar',\r\n    templateUrl: './pedido-listar.component.html',\r\n    styleUrls: ['./pedido-listar.component.css']\r\n})\r\nexport class PedidoListarComponent implements OnInit {\r\n\r\n    colunasTabela = [\"numero\", \"desconto\",\"total\",\"datapedido\",\"dataAtualizacao\",\"status\",\"action\"];\r\n\r\n    page: Page<Pedido> = new Page([], 0);\r\n    pageEvent: PageEvent;\r\n    sortEvent: Sort;\r\n\r\n    carregando = false;\r\n\r\n    constructor(private pedidoService: PedidoService, \r\n        public dialog: MatDialog,\r\n\r\n        private router: Router,\r\n        private matSnackBar: MatSnackBar) { }\r\n\r\n    ngOnInit() {\r\n        this.listarItens();\r\n    }\r\n\r\n    listarItens() {\r\n        this.carregando = true;\r\n        let queryAdicional;\r\n        this.pedidoService\r\n            .listar(\r\n                new PageRequest(\r\n                    {\r\n                        pageNumber: this.pageEvent ? this.pageEvent.pageIndex : 0,\r\n                        pageSize: this.pageEvent ? this.pageEvent.pageSize : 5,\r\n                    },\r\n                    {\r\n                        property: this.sortEvent ? this.sortEvent.active : \"numero\",\r\n                        direction: this.sortEvent ? this.sortEvent.direction : \"asc\",\r\n                    },\r\n                    queryAdicional\r\n                )\r\n            )\r\n            .pipe(take(1))\r\n            .subscribe(\r\n                (page) => {\r\n                    this.page = page;\r\n                    this.carregando = false;\r\n                },\r\n                (error) => {\r\n                    this.page = new Page([], 0);\r\n                    this.carregando = false;\r\n                    this.matSnackBar.open(\"Erro ao listar Pedidos\", null, {\r\n                        duration: 5000,\r\n                        panelClass: \"red-snackbar\",\r\n                    });\r\n                }\r\n            );\r\n    }\r\n\r\n    onDelete($key) {\r\n        const message = `Tem certeza que deseja excluir esse registro?`;\r\n        const dialogData = new ConfirmDialogModel(\"Confirma ?\", message);\r\n\r\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n            maxWidth: \"400px\",\r\n            data: dialogData\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(res => {\r\n            if (res) {\r\n                this.pedidoService.deletar($key).subscribe(() => {\r\n                    this.listarItens();\r\n                    this.matSnackBar.open(\"Excluído com sucesso!\", null, {\r\n                        duration: 5000,\r\n                        panelClass: \"green-snackbar\",\r\n                    });\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n}\r\n","<div class=\"example-button-row right\">\r\n  <button mat-fab color=\"success\" routerLink=\"/pedidos/cadastrar\">\r\n    <mat-icon>add</mat-icon>\r\n  </button>\r\n</div>\r\n<div class=\"title-group\">\r\n  <h1 class=\"mat-h1\">Lista de Pedidos</h1>\r\n  <mat-divider fxFlex=\"1 0\"></mat-divider>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z4\">\r\n  <table mat-table [dataSource]=\"page.content\" matSort (matSortChange)=\"sortEvent = $event; listarItens();\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"numero\">\r\n      <th mat-header-cell *matHeaderCellDef>Número</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.numero}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"desconto\">\r\n      <th mat-header-cell *matHeaderCellDef>Desconto</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.desconto}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"total\">\r\n      <th mat-header-cell *matHeaderCellDef>Valor Total</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.vlrTotal}}</td>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"datapedido\">\r\n      <th mat-header-cell *matHeaderCellDef>Data Pedido</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.dataInclusao|date:'dd/MM/yyyy hh:mm'}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"dataAtualizacao\">\r\n      <th mat-header-cell *matHeaderCellDef>Atualizado em</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.dataAtualizacao | date:'dd/MM/yyyy hh:mm'}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"status\">\r\n      <th mat-header-cell *matHeaderCellDef>Status</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.status}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Action Column -->\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef>Ações</th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <a routerLink=\"/pedidos/editar/{{ row.id }}\" class=\"edit\">\r\n          <i class=\"material-icons\">\r\n            edit\r\n          </i>\r\n        </a>\r\n        <button mat-icon-button color=\"warn\" (click)=\"onDelete(row.id)\">\r\n          <mat-icon>delete_outline</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"colunasTabela\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: colunasTabela;\"></tr>\r\n  </table>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PedidoListarRoutingModule } from './pedido-listar-routing.module';\r\nimport { PedidoListarComponent } from './components/pedido-listar.component';\r\nimport { MaterialModule } from 'src/app/material-module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [PedidoListarComponent],\r\n  imports: [\r\n    MaterialModule,\r\n    CommonModule,\r\n    PedidoListarRoutingModule\r\n  ]\r\n})\r\nexport class PedidoListarModule { }\r\n"],"sourceRoot":"webpack:///"}