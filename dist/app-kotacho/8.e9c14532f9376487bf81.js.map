{"version":3,"sources":["./src/app/_util/Pagination.ts","./src/app/produto/produto-listar/components/produto-listar.component.ts","./src/app/produto/produto-listar/components/produto-listar.component.html","./src/app/produto/produto-listar/produto-listar-routing.module.ts","./src/app/produto/produto-listar/produto-listar.module.ts"],"names":[],"mappings":"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","file":"8.e9c14532f9376487bf81.js","sourcesContent":["export interface SortQuery {\r\n    property: string,\r\n    direction: string\r\n}\r\n\r\nexport interface PageQuery {\r\n    pageNumber: number,\r\n    pageSize: number\r\n}\r\n\r\nexport interface QueryBuilder {\r\n    pageQuery: PageQuery;\r\n    sortQuery: SortQuery;\r\n    aditionalQuery: Map<string, string>;\r\n    buildQueryMap(): Map<string, string>;\r\n    buildQueryString(): string;\r\n    buildPageQueryMap(): Map<string, string>;\r\n    buildSortQueryMap(): Map<string, string>;\r\n}\r\n\r\nexport class PageRequest implements QueryBuilder {\r\n\r\n    constructor(public pageQuery: PageQuery, public sortQuery: SortQuery, public aditionalQuery: Map<string, string>) { }\r\n\r\n    buildQueryMap(): Map<string, string> {\r\n\r\n        let buildQueryMap = new Map<string, string>([...this.buildPageQueryMap(), ...this.buildSortQueryMap()]);\r\n\r\n        if (this.aditionalQuery) {\r\n            buildQueryMap = new Map<string, string>([...buildQueryMap, ...this.aditionalQuery])\r\n        }\r\n\r\n        return buildQueryMap;\r\n    }\r\n\r\n    buildQueryString(): string {\r\n\r\n        return Array.from(this.buildQueryMap()).map(itemArray => `${itemArray[0]}=${itemArray[1]}`).join(\"&\");\r\n\r\n    }\r\n\r\n    buildPageQueryMap(): Map<string, string> {\r\n\r\n        let buildPageQueryMap = new Map<string, string>();\r\n\r\n        buildPageQueryMap.set(\"_page\", `${this.pageQuery.pageNumber + 1}`);\r\n        buildPageQueryMap.set(\"_limit\", `${this.pageQuery.pageSize}`);\r\n\r\n        return buildPageQueryMap;\r\n\r\n    }\r\n\r\n    buildSortQueryMap(): Map<string, string> {\r\n\r\n        let buildPageQueryMap = new Map<string, string>();\r\n\r\n        buildPageQueryMap.set(\"_sort\", `${this.sortQuery.property}`);\r\n        buildPageQueryMap.set(\"_order\", `${this.sortQuery.direction}`);\r\n\r\n        return buildPageQueryMap;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class Page<T> {\r\n\r\n    constructor(public content: T[], public totalElements: number){}\r\n\r\n    static fromResponse<T>(response:any){\r\n        return new Page<T>(response.body, parseInt(response.headers.get(\"X-Total-Count\")));\r\n    }\r\n    \r\n}","import { Component, OnInit } from \"@angular/core\";\n\nimport { Page, PageRequest } from \"../../../_util/Pagination\";\nimport { PageEvent } from \"@angular/material/paginator\";\nimport { take } from \"rxjs/operators\";\nimport { Sort } from \"@angular/material/sort\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { Router } from '@angular/router';\nimport { Produto } from 'src/app/interfaces/produto.model';\nimport { ProdutoService } from '../../produto.service';\n\n\n@Component({\n    selector: 'app-produto-listar',\n    templateUrl: './produto-listar.component.html',\n    styleUrls: ['./produto-listar.component.css']\n})\nexport class ProdutoListarComponent implements OnInit {\n\n    colunasTabela = [\"nome\", \"detalhe\", \"medida\", \"ativo\", \"action\"];\n\n    page: Page<Produto> = new Page([], 0);\n    pageEvent: PageEvent;\n    sortEvent: Sort;\n\n    carregando = false;\n\n    constructor(private produtoService: ProdutoService,\n        private router: Router,\n        private matSnackBar: MatSnackBar) { }\n\n    ngOnInit() {\n        this.listarItens();\n    }\n\n    listarItens() {\n        this.carregando = true;\n        let queryAdicional;\n        this.produtoService\n            .listar(\n                new PageRequest(\n                    {\n                        pageNumber: this.pageEvent ? this.pageEvent.pageIndex : 0,\n                        pageSize: this.pageEvent ? this.pageEvent.pageSize : 5,\n                    },\n                    {\n                        property: this.sortEvent ? this.sortEvent.active : \"numero\",\n                        direction: this.sortEvent ? this.sortEvent.direction : \"asc\",\n                    },\n                    queryAdicional\n                )\n            )\n            .pipe(take(1))\n            .subscribe(\n                (page) => {\n                    this.page = page;\n                    this.carregando = false;\n                },\n                (error) => {\n                    this.page = new Page([], 0);\n                    this.carregando = false;\n                    this.matSnackBar.open(\"Erro ao listar Produtos\", null, {\n                        duration: 5000,\n                        panelClass: \"red-snackbar\",\n                    });\n                }\n            );\n    }\n\n\n}\n","<div class=\"mat-elevation-z4\">\n\n     <button button=\"submit\" mat-raised-button class=\"btn-success\" routerLink=\"/produtos/cadastrar\">\n      <mat-icon>add</mat-icon> Novo Produto\n    </button>\n\n    <table mat-table [dataSource]=\"page.content\" matSort (matSortChange)=\"sortEvent = $event; listarItens();\">\n      <!-- Id Column -->\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"nome\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"detalhe\">\n        <th mat-header-cell *matHeaderCellDef>Detalhe</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.detalhe}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"medida\">\n        <th mat-header-cell *matHeaderCellDef>Medida</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.medida}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"ativo\">\n        <th mat-header-cell *matHeaderCellDef>ativo</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.ativo}}</td>\n      </ng-container>\n  \n      <!-- Action Column -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n            <a routerLink=\"/produtos/editar/{{ row.id }}\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a routerLink=\"/produtos/delete/{{ row.id }}\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n        </td>\n      </ng-container>\n  \n      <tr mat-header-row *matHeaderRowDef=\"colunasTabela\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: colunasTabela;\"></tr>\n    </table>\n  </div>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProdutoListarComponent } from './components/produto-listar.component';\n\nconst routes: Routes = [\n   {path: \"\", component: ProdutoListarComponent},\n   {path: \"produtos\", component: ProdutoListarComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProdutoListarRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MaterialModule } from 'src/app/material-module';\nimport { ProdutoListarRoutingModule } from './produto-listar-routing.module';\nimport { ProdutoListarComponent } from './components/produto-listar.component';\n\n\n@NgModule({\n  declarations: [ProdutoListarComponent],\n  imports: [\n    MaterialModule,\n    CommonModule,\n    ProdutoListarRoutingModule\n  ]\n})\nexport class ProdutoListarModule { }\n"],"sourceRoot":"webpack:///"}