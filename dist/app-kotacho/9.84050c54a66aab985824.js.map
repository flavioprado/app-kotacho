{"version":3,"sources":["./src/app/_shared/mat-confirm-dialog/mat-confirm-dialog.component.ts","./src/app/_shared/mat-confirm-dialog/mat-confirm-dialog.component.html","./src/app/_util/Pagination.ts","./src/app/_shared/dialog.service.ts","./src/app/cliente/cliente-listar/components/cliente-listar.component.ts","./src/app/cliente/cliente-listar/components/cliente-listar.component.html","./src/app/cliente/cliente-listar/cliente-listar-routing.module.ts","./src/app/cliente/cliente-listar/cliente-listar.module.ts"],"names":[],"mappings":"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","file":"9.84050c54a66aab985824.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-mat-confirm-dialog',\r\n  templateUrl: './mat-confirm-dialog.component.html',\r\n  styleUrls: ['./mat-confirm-dialog.component.css']\r\n})\r\nexport class MatConfirmDialogComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<MatConfirmDialogComponent>) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n}\r\n","<div>\r\n  <div class=\"content-container\">\r\n    <!-- <mat-icon id=\"close-icon\" (click)=\"closeDialog()\">close</mat-icon>  -->\r\n    <span class=\"content-span full-width\">{{data.message}}</span>\r\n  </div>\r\n  <button mat-flat-button id=\"yes-button\" mat-dialog-close=\"true\">Sim</button>\r\n  <button mat-flat-button id=\"no-button\" mat-dialog-close=\"false\">NÃ£o</button>\r\n</div>\r\n","export interface SortQuery {\r\n    property: string,\r\n    direction: string\r\n}\r\n\r\nexport interface PageQuery {\r\n    pageNumber: number,\r\n    pageSize: number\r\n}\r\n\r\nexport interface QueryBuilder {\r\n    pageQuery: PageQuery;\r\n    sortQuery: SortQuery;\r\n    aditionalQuery: Map<string, string>;\r\n    buildQueryMap(): Map<string, string>;\r\n    buildQueryString(): string;\r\n    buildPageQueryMap(): Map<string, string>;\r\n    buildSortQueryMap(): Map<string, string>;\r\n}\r\n\r\nexport class PageRequest implements QueryBuilder {\r\n\r\n    constructor(public pageQuery: PageQuery, public sortQuery: SortQuery, public aditionalQuery: Map<string, string>) { }\r\n\r\n    buildQueryMap(): Map<string, string> {\r\n\r\n        let buildQueryMap = new Map<string, string>([...this.buildPageQueryMap(), ...this.buildSortQueryMap()]);\r\n\r\n        if (this.aditionalQuery) {\r\n            buildQueryMap = new Map<string, string>([...buildQueryMap, ...this.aditionalQuery])\r\n        }\r\n\r\n        return buildQueryMap;\r\n    }\r\n\r\n    buildQueryString(): string {\r\n\r\n        return Array.from(this.buildQueryMap()).map(itemArray => `${itemArray[0]}=${itemArray[1]}`).join(\"&\");\r\n\r\n    }\r\n\r\n    buildPageQueryMap(): Map<string, string> {\r\n\r\n        let buildPageQueryMap = new Map<string, string>();\r\n\r\n        buildPageQueryMap.set(\"_page\", `${this.pageQuery.pageNumber + 1}`);\r\n        buildPageQueryMap.set(\"_limit\", `${this.pageQuery.pageSize}`);\r\n\r\n        return buildPageQueryMap;\r\n\r\n    }\r\n\r\n    buildSortQueryMap(): Map<string, string> {\r\n\r\n        let buildPageQueryMap = new Map<string, string>();\r\n\r\n        buildPageQueryMap.set(\"_sort\", `${this.sortQuery.property}`);\r\n        buildPageQueryMap.set(\"_order\", `${this.sortQuery.direction}`);\r\n\r\n        return buildPageQueryMap;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class Page<T> {\r\n\r\n    constructor(public content: T[], public totalElements: number){}\r\n\r\n    static fromResponse<T>(response:any){\r\n        return new Page<T>(response.body, parseInt(response.headers.get(\"X-Total-Count\")));\r\n    }\r\n    \r\n}","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatConfirmDialogComponent } from './mat-confirm-dialog/mat-confirm-dialog.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DialogService {\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  openConfirmDialog(msg){\r\n   const result = this.dialog.open(MatConfirmDialogComponent,{\r\n      width: '390px',\r\n      panelClass: 'confirm-dialog-container',\r\n      disableClose: true,\r\n      position: { top: \"10px\" },\r\n      data :{\r\n        message : msg\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\nimport { Page, PageRequest } from \"../../../_util/Pagination\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { take } from \"rxjs/operators\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Cliente } from '../../cliente.model';\r\nimport { ClienteService } from '../../cliente.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogService } from 'src/app/_shared/dialog.service';\r\nimport { ConfirmDialogModel, ConfirmDialogComponent } from 'src/app/_shared/confirm-dialog/confirm-dialog.component';\r\n\r\n\r\n@Component({\r\n    selector: 'app-cliente-listar',\r\n    templateUrl: './cliente-listar.component.html',\r\n    styleUrls: ['./cliente-listar.component.css']\r\n})\r\nexport class ClienteListarComponent implements OnInit {\r\n\r\n    colunasTabela = [\"numero\", \"nome\", \"cnpj\", \"ativo\", \"action\"];\r\n\r\n    page: Page<Cliente> = new Page([], 0);\r\n    pageEvent: PageEvent;\r\n    sortEvent: Sort;\r\n\r\n    carregando = false;\r\n\r\n    constructor(private clienteService: ClienteService,\r\n        private router: Router,\r\n        public dialog: MatDialog,\r\n        private matSnackBar: MatSnackBar,\r\n        private dialogService: DialogService) { }\r\n\r\n    ngOnInit() {\r\n        this.listarItens();\r\n    }\r\n\r\n    listarItens() {\r\n        this.carregando = true;\r\n        let queryAdicional;\r\n        this.clienteService\r\n            .listar(\r\n                new PageRequest(\r\n                    {\r\n                        pageNumber: this.pageEvent ? this.pageEvent.pageIndex : 0,\r\n                        pageSize: this.pageEvent ? this.pageEvent.pageSize : 5,\r\n                    },\r\n                    {\r\n                        property: this.sortEvent ? this.sortEvent.active : \"numero\",\r\n                        direction: this.sortEvent ? this.sortEvent.direction : \"asc\",\r\n                    },\r\n                    queryAdicional\r\n                )\r\n            )\r\n            .pipe(take(1))\r\n            .subscribe(\r\n                (page) => {\r\n                    this.page = page;\r\n                    this.carregando = false;\r\n                },\r\n                (error) => {\r\n                    this.page = new Page([], 0);\r\n                    this.carregando = false;\r\n                    this.matSnackBar.open(\"Erro ao listar Clientes\", null, {\r\n                        duration: 5000,\r\n                        panelClass: \"red-snackbar\",\r\n                    });\r\n                }\r\n            );\r\n    }\r\n\r\n    onEdit(row) {\r\n        this.router.navigateByUrl(`/clientes/editar/${row.cli_id}`);\r\n    }\r\n\r\n    onDelete($key) {\r\n        const message = `Tem certeza que deseja excluir esse registro?`;\r\n        const dialogData = new ConfirmDialogModel(\"Confirma ?\", message);\r\n\r\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n            maxWidth: \"400px\",\r\n            data: dialogData\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(res => {\r\n            if (res) {\r\n                this.clienteService.deletar($key).subscribe(() => {\r\n                    this.listarItens();\r\n                    this.matSnackBar.open(\"ExcluÃ­do com sucesso!\", null, {\r\n                        duration: 5000,\r\n                        panelClass: \"green-snackbar\",\r\n                    });\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    cadastrarCliente() {\r\n\r\n    }\r\n}\r\n","<div class=\"example-button-row right\">  \r\n  <button mat-fab color=\"success\" routerLink=\"/clientes/cadastrar\">\r\n    <mat-icon>add</mat-icon> \r\n  </button>\r\n</div>\r\n<div class=\"title-group\">\r\n  <h1 class=\"mat-h4\">Lista de Clientes</h1>\r\n  <!-- <mat-divider fxFlex=\"1 0\"></mat-divider> -->\r\n</div>\r\n\r\n<div class=\"mat-elevation-z4\">\r\n  <table mat-table [dataSource]=\"page.content\" matSort (matSortChange)=\"sortEvent = $event; listarItens();\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"numero\">\r\n      <th mat-header-cell *matHeaderCellDef>NÃºmero</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.numero}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"nome\">\r\n      <th mat-header-cell *matHeaderCellDef>RazÃ£o Social</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"cnpj\">\r\n      <th mat-header-cell *matHeaderCellDef>CNPJ</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.cnpj}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"ativo\">\r\n      <th mat-header-cell *matHeaderCellDef>Ativo</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.ativo?'SIM':'NÃO'}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Action Column -->\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef>AÃ§Ãµes</th>\r\n      <mat-cell *matCellDef=\"let row\">\r\n        <button mat-icon-button (click)=\"onEdit(row)\">\r\n          <mat-icon>launch</mat-icon>\r\n        </button>\r\n        <button mat-icon-button color=\"warn\" (click)=\"onDelete(row.id)\">\r\n          <mat-icon>delete_outline</mat-icon>\r\n        </button>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"colunasTabela\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: colunasTabela;\"></tr>\r\n  </table>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClienteListarComponent } from './components/cliente-listar.component';\r\n\r\nconst routes: Routes = [\r\n   {path: \"\", component: ClienteListarComponent},\r\n   {path: \"clientes\", component: ClienteListarComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ClienteListarRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ClienteListarRoutingModule } from './cliente-listar-routing.module';\r\nimport { ClienteListarComponent } from './components/cliente-listar.component';\r\nimport { MaterialModule } from 'src/app/material-module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ClienteListarComponent],\r\n  imports: [\r\n    MaterialModule,\r\n    CommonModule,\r\n    ClienteListarRoutingModule\r\n  ]\r\n})\r\nexport class ClienteListarModule { }\r\n"],"sourceRoot":"webpack:///"}