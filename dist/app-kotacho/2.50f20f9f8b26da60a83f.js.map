{"version":3,"sources":["./src/app/produto/produto-cad-edit/components/produto-cad-edit.component.ts","./src/app/produto/produto-cad-edit/components/produto-cad-edit.component.html","./src/app/produto/produto-cad-edit/produto-cad-edit-routing.module.ts","./src/app/produto/produto-cad-edit/produto-cad-edit.module.ts"],"names":[],"mappings":"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","file":"2.50f20f9f8b26da60a83f.js","sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { DialogoConfirmacaoComponent } from 'src/app/_shared/dialogo-confirmacao/dialogo-confirmacao.component';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Endereco } from 'src/app/interfaces/endereco.model';\nimport * as _ from 'lodash';\nimport { ProdutoService } from '../../produto.service';\nimport { Produto } from 'src/app/interfaces/produto.model';\n\n\n@Component({\n    selector: 'app-produto-cad-edit',\n    templateUrl: './produto-cad-edit.component.html',\n    styleUrls: ['./produto-cad-edit.component.css']\n})\nexport class ProdutoCadEditComponent implements OnInit {\n    @ViewChild(\"name\") nameField: ElementRef;\n\n\n    emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\n    formCadastro: FormGroup;\n    produto: Produto;\n    labelForm: string;\n\n    constructor(\n        private fb: FormBuilder,\n        private produtoService: ProdutoService,\n        private router: Router,\n        private route: ActivatedRoute,\n        public matDialog: MatDialog,\n        public matSnackBar: MatSnackBar\n    ) { }\n\n    ngOnInit() {\n\n        let id = this.route.snapshot.paramMap.get('id');\n\n        this.labelForm = id ? 'Editar' : 'Cadastrar';\n\n        if (id) {\n            this.loadProduto(id);\n        }\n\n        this.buildForm();\n\n    }\n    // editName(): void {\n    //     this.nameField.nativeElement.focus();\n    //   }\n\n    loadProduto(id) {\n        this.produtoService.pesquisarPorId(id).subscribe((produto) => {\n            this.produto = produto;\n            this.loadObjectInForm(produto);\n        })\n    }\n\n    ngAfterViewInit() {\n        // this.nameField.nativeElement.focus();\n    }\n    private setValueOnForm(form: FormGroup, pathOnForm: string, value: any) {\n        if (value) {\n            form.get(pathOnForm).setValue(value);\n        }\n    }\n    private loadObjectInForm(produto: Produto) {\n        this.formCadastro.patchValue(produto);\n    }\n\n    buildForm() {\n        let emailregex: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        this.formCadastro = this.fb.group({\n            id: null,\n            nome: [\"\", Validators.required],\n            detalhe: [\"\"],\n            imagem: [\"\"],\n            ativo: [true, Validators.required],\n            precoCusto: [\"\", [Validators.required]],\n            precoVenda: [\"\", [Validators.required]],\n        });\n    }\n\n    getErrorEmail() {\n        return this.formCadastro.get('email').hasError('required') ? 'Email é obrigatório' :\n            this.formCadastro.get('email').hasError('pattern') ? 'Email inválido' :\n                this.formCadastro.get('email').hasError('alreadyInUse') ? 'This emailaddress is already in use' : '';\n    }\n\n    getErrorCnpj() {\n        const valida = this.formCadastro.get('cnpj').hasError('required') ? 'CNPJ é obrigatório' :\n            this.formCadastro.get('cnpj').hasError('pattern') ? 'CNPJ inválido' :\n                this.formCadastro.get('cnpj').hasError('digit') ? 'CNPJ inválido' : '';\n\n        return valida;\n\n    }\n\n    getErrorCep() {\n        const cep = this.formCadastro.get('endereco.cep').value;\n        const retorno = this.formCadastro.get('endereco.cep').hasError('required') ? 'CEP é obrigatório' :\n            this.formCadastro.get('endereco.cep').hasError('pattern') ? 'CEP inválido' : '';\n        return retorno;\n\n    }\n\n\n\n\n\n    salvar() {\n        debugger;\n\n        const {\n            id,\n            nome,\n            valorCusto,\n            valorVenda,\n            ativo,\n            detalhe,\n            imagem\n\n        } = this.formCadastro.value;\n\n        const Produto = {\n            id,\n            nome,\n            valorCusto,\n            valorVenda,\n            ativo,\n            detalhe,\n            imagem\n        } as Produto;\n\n        \n\n        if (this.produto && this.produto.id) {\n            this.produtoService.atualizar(this.produto).subscribe(\n                (itemAtualizado) => {\n                    this.matSnackBar.open(\"Atualizado com sucesso!\", null, {\n                        duration: 5000,\n                        panelClass: \"green-snackbar\",\n                    });\n                    this.router.navigateByUrl(\"/Produtos\");\n                },\n                (error) => {\n                    this.matSnackBar.open(\"Erro ao atualizar\", null, {\n                        duration: 5000,\n                        panelClass: \"red-snackbar\",\n                    });\n                }\n            );\n        } else {\n            this.produtoService.cadastrar(this.formCadastro.value).subscribe(\n                (itemCadastrado) => {\n                    this.matSnackBar.open(\"Cadastrado com sucesso!\", null, {\n                        duration: 5000,\n                        panelClass: \"green-snackbar\",\n                    });\n                    this.router.navigateByUrl(\"/Produtos\");\n                },\n                (error) => {\n                    this.matSnackBar.open(\"Erro ao cadastrar\", null, {\n                        duration: 5000,\n                        panelClass: \"red-snackbar\",\n                    });\n                }\n            );\n        }\n    }\n\n    deletar() {\n        const dialogoReferencia = this.matDialog.open(DialogoConfirmacaoComponent);\n\n        dialogoReferencia.afterClosed().subscribe((valorResposta) => {\n            if (valorResposta) {\n                this.produtoService.deletar(this.produto).subscribe(\n                    (response) => {\n                        this.matSnackBar.open(\"Item deletado com sucesso!\", null, {\n                            duration: 5000,\n                            panelClass: \"green-snackbar\",\n                        });\n                        this.router.navigateByUrl(\"/itens\");\n                    },\n                    (error) => {\n                        this.matSnackBar.open(\"Erro ao deletar\", null, {\n                            duration: 5000,\n                            panelClass: \"red-snackbar\",\n                        });\n                    }\n                );\n            }\n        });\n    }\n}\n","<!-- Title group  -->\n<div class=\"title-group\">\n    <h1 class=\"mat-h1\">{{labelForm}} Produto</h1>\n    <mat-divider fxFlex=\"1 0\"></mat-divider>\n</div>\n\n<!-- Form -->\n<div class=\"inner-wrapper\">\n    <form [formGroup]=\"formCadastro\" (ngSubmit)=\"formCadastro.valid && salvar()\" #resetFormCadastro=\"ngForm\" novalidate>\n        <!-- Left block -->\n        <mat-card>\n            <div class=\"controlers-wrapper\">\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Nome</mat-label>\n                    <input matInput placeholder=\"Nome\" formControlName=\"nome\" required #name>\n                    <mat-error>Nome do Produto obrigatório</mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Detalhes</mat-label>\n                    <input matInput placeholder=\"Detalhes do Produto\" formControlName=\"detalhe\">\n                    <mat-error>\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Preço Custo</mat-label>\n                    <input matInput placeholder=\"Preço de Custo\" formControlName=\"precoCusto\" required\n                        autocomplete=\"off\">\n                    <mat-error>\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Preço Venda</mat-label>\n                    <input matInput placeholder=\"Preço de Venda\" formControlName=\"precoVenda\" required\n                        autocomplete=\"off\">\n                    <mat-error>\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Imagem do Produto</mat-label>\n                    <input matInput placeholder=\"imagem\" formControlName=\"imagem\">\n                    <mat-error>\n                    </mat-error>\n                </mat-form-field>\n\n\n                <section class=\"example-section\">\n                    <mat-label>Ativo</mat-label>\n                    <mat-checkbox id=\"ativo\" class=\"ativo\" color=\"primary\" formControlName=\"ativo\">\n                    </mat-checkbox>\n                    <mat-error>\n                    </mat-error>\n                </section>\n            </div>\n        </mat-card>\n\n\n        <mat-card-actions>\n            <button mat-raised-button color=\"primary\" [disabled]=\"!formCadastro.valid\">Salvar</button>\n            <button type=\"button\" mat-raised-button routerLink=\"/produtos\">Cancelar</button>\n        </mat-card-actions>\n\n\n        <!-- Submit & Reset -->\n        <!-- <mat-card>\n            <div class=\"full-wrapper button-wrapper\">\n                <div class=\"button-wrapper\">\n                    <button mat-flat-button color=\"warn\">Salvar</button>\n                </div>\n            </div>\n        </mat-card>  -->\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProdutoCadEditComponent } from './components/produto-cad-edit.component';\nconst routes: Routes = [\n  {path: \"\", component: ProdutoCadEditComponent}\n];\n\n@NgModule({\n imports: [RouterModule.forChild(routes)],\n exports: [RouterModule]\n})\nexport class ProdutoCadEditRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MaterialModule } from 'src/app/material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMaskModule, IConfig } from 'ngx-mask'\nimport { ProdutoCadEditComponent } from './components/produto-cad-edit.component';\nimport { ProdutoCadEditRoutingModule } from './produto-cad-edit-routing.module';\n \nconst maskConfig: Partial<IConfig> = {\n  validation: false,\n};\n\n\n@NgModule({\n  declarations: [ProdutoCadEditComponent],\n  imports: [\n    NgxMaskModule.forRoot(maskConfig),\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    ProdutoCadEditRoutingModule,\n  ]\n})\nexport class ProdutoCadEditModule { }\n"],"sourceRoot":"webpack:///"}