{"version":3,"sources":["./src/app/produto/produto-cad-edit/components/produto-cad-edit.component.ts","./src/app/produto/produto-cad-edit/components/produto-cad-edit.component.html","./src/app/produto/produto-cad-edit/produto-cad-edit-routing.module.ts","./src/app/produto/produto-cad-edit/produto-cad-edit.module.ts"],"names":[],"mappings":"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","file":"8.ed3b6ed1624e3d620c07.js","sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Endereco } from 'src/app/interfaces/endereco.model';\r\nimport * as _ from 'lodash';\r\nimport { ProdutoService } from '../../produto.service';\r\nimport { Produto } from 'src/app/interfaces/produto.model';\r\nimport { FileValidator } from 'ngx-material-file-input';\r\nimport { Categoria } from 'src/app/categoria/categoria.model';\r\nimport { CategoriaService } from 'src/app/categoria/categoria.service';\r\nimport { DialogService } from 'src/app/_shared/dialog.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-produto-cad-edit',\r\n    templateUrl: './produto-cad-edit.component.html',\r\n    styleUrls: ['./produto-cad-edit.component.css']\r\n})\r\nexport class ProdutoCadEditComponent implements OnInit {\r\n    @ViewChild(\"name\") nameField: ElementRef;\r\n\r\n    imgFile: any;\r\n    emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\r\n    formCadastro: FormGroup;\r\n    produto: Produto;\r\n    labelForm: string;\r\n    medidas: string[] = ['UNIDADE', 'KG', 'CX'];\r\n    categorias: Categoria[];\r\n    readonly imageMaxSize = 2097152;\r\n    categoria: any;\r\n\r\n    constructor(\r\n        public dialog: MatDialog,\r\n        private dialogService: DialogService,\r\n        private fb: FormBuilder,\r\n        private produtoService: ProdutoService,\r\n        private categoriaService: CategoriaService,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        public matDialog: MatDialog,\r\n        public matSnackBar: MatSnackBar\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        let id = this.route.snapshot.paramMap.get('id');\r\n\r\n        this.labelForm = id ? 'Editar' : 'Cadastrar';\r\n\r\n        if (id) {\r\n            this.loadProduto(id);\r\n        }\r\n        this.buildForm();\r\n        this.loadCategorias();\r\n\r\n    }\r\n    // editName(): void {\r\n    //     this.nameField.nativeElement.focus();\r\n    //   }\r\n\r\n    loadProduto(id) {\r\n        this.produtoService.pesquisarPorId(id).subscribe((produto) => {\r\n            this.produto = produto;\r\n            this.formCadastro.patchValue(produto);\r\n            this.formCadastro.patchValue({\r\n                categoria: produto.categoria.id\r\n            });\r\n\r\n        })\r\n    }\r\n\r\n    loadCategorias() {\r\n        this.categoriaService.list().subscribe((dados) => {\r\n            this.categorias = dados;\r\n        })\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // this.nameField.nativeElement.focus();\r\n    }\r\n    private setValueOnForm(form: FormGroup, pathOnForm: string, value: any) {\r\n        if (value) {\r\n            form.get(pathOnForm).setValue(value);\r\n        }\r\n    }\r\n    private loadObjectInForm(produto: Produto) {\r\n        //this.formCadastro.get('nome').setValue(produto.nome);\r\n        //  this.formCadastro.get('categoria').setValue(produto.categoria.id);\r\n        //this.formCadastro.patchValue(produto);\r\n        //this.formCadastro.patchValue({\r\n        this.categoria = produto.categoria;\r\n        // });\r\n\r\n    }\r\n\r\n    onClickVoltar() {\r\n        this.router.navigateByUrl('/produtos');\r\n    }\r\n\r\n    buildForm() {\r\n        let emailregex: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        this.formCadastro = this.fb.group({\r\n            id: null,\r\n            numero: [null, Validators.required],\r\n            nome: [null, Validators.required],\r\n            detalhe: [\"\"],\r\n            image: [undefined, [FileValidator.maxContentSize(this.imageMaxSize)]],\r\n            categoria: [null, Validators.required],\r\n            medida: [\"\", Validators.required],\r\n            ativo: [true, Validators.required],\r\n            precoCusto: [\"\", [Validators.required]],\r\n            precoVenda: [\"\", [Validators.required]],\r\n        });\r\n    }\r\n\r\n\r\n    transform(value: number): any {\r\n        let formatedValue: string;\r\n\r\n        if (!value) {\r\n            return formatedValue;\r\n        }\r\n\r\n        if (typeof value === 'string') {\r\n            value = Number.parseFloat(value);\r\n        }\r\n\r\n        formatedValue = value.toFixed(2).replace('.', ',');\r\n\r\n        formatedValue = formatedValue.replace(/(\\d)(?=(\\d{3})+\\,)/g, '$1.');\r\n\r\n        return formatedValue;\r\n    }\r\n    upload(event) {\r\n        const file = event.target.files[0];\r\n        // this.produtoService.uploadImage(file).subscribe();\r\n        this.produtoService.uploadImage(file).subscribe();\r\n\r\n\r\n    }\r\n\r\n    onFileChange(event) {\r\n        if (event.target.files.length > 0) {\r\n            const file = event.target.files[0];\r\n            //  this.formCadastro.get('image').setValue(file);\r\n            this.imgFile = this.imageToBase64(file.name);\r\n        } else {\r\n            this.imgFile = null;\r\n        }\r\n\r\n        // const promise = getBase64(my_pdf_file);\r\n        // promise.then(function (result) {\r\n        //     // console.log(result);\r\n        //     var test_variable = result;\r\n        //     console.log(test_variable);\r\n        // });\r\n    }\r\n\r\n    // BEGIN from:  https://stackoverflow.com/a/47245396/1063287\r\n    getBase64(file) {\r\n        // return new Promise(function (resolve, reject) {\r\n        //     var reader = new FileReader();\r\n        //     reader.onload = function () { resolve(reader.result); \r\n        //     reader.onerror = reject;\r\n        //     reader.readAsDataURL(file);\r\n        // })));\r\n    }\r\n\r\n    async getBase64OLd(file) {\r\n        var reader = new FileReader();\r\n        reader.onload = function () {\r\n            console.log(reader.result);\r\n        };\r\n        reader.onerror = function (error) {\r\n            console.log('Error: ', error);\r\n        };\r\n        reader.readAsDataURL(file);\r\n\r\n        // for (var i = 0; i < file.length; i++) {\r\n        //     var file=file[i];    \r\n        //     reader = new FileReader();\r\n        //     reader.onload = function(){\r\n        //         alert(file.name);\r\n        //         alert(this.result);\r\n        //     };\r\n        // reader.readAsText(file);\r\n\r\n    }\r\n\r\n    async onChangeSelectFile(event) {\r\n        // let retorno: any;\r\n        // let file = event.target.files[0];\r\n        // if (file) {\r\n        //     const promise = this.getBase64(file);\r\n        //     await promise.then(function (result) {\r\n        //         retorno = result;\r\n        //     });\r\n        // }\r\n        // this.imgFile = retorno;\r\n    }\r\n\r\n    imageToBase64(img) {\r\n        var canvas, ctx, dataURL, base64;\r\n        canvas = document.createElement(\"canvas\");\r\n        ctx = canvas.getContext(\"2d\");\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        ctx.drawImage(img, 0, 0);\r\n        dataURL = canvas.toDataURL(\"image/png\");\r\n        base64 = dataURL.replace(/^data:image\\/png;base64,/, \"\");\r\n        return base64;\r\n    }\r\n\r\n    receivedChildMessage: string;\r\n    getUploadedFile(message: string) {\r\n        console.log('path ' + JSON.stringify(message));\r\n        this.receivedChildMessage = message;\r\n    }\r\n\r\n    private handleErrorResponse(errorResponse) {\r\n        switch (errorResponse.status) {\r\n            case 400:\r\n            case 500:\r\n            default:\r\n                this.matSnackBar.open(errorResponse.error.message, null, {\r\n                    duration: 5000,\r\n                    panelClass: \"red-snackbar\",\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    salvar() {\r\n        const {\r\n            id,\r\n            numero,\r\n            nome,\r\n            categoria,\r\n            medida,\r\n            precoCusto,\r\n            precoVenda,\r\n            ativo,\r\n            detalhe,\r\n            image\r\n\r\n        } = this.formCadastro.value;\r\n\r\n        const produto = {\r\n            id,\r\n            numero,\r\n            nome,\r\n            categoria,\r\n            medida,\r\n            precoCusto,\r\n            precoVenda,\r\n            ativo,\r\n            detalhe,\r\n            image\r\n        } as Produto;\r\n\r\n        produto.image = this.imgFile;\r\n\r\n        if (produto && produto.id) {\r\n            this.produtoService.atualizar(produto).subscribe(\r\n                (itemAtualizado) => {\r\n                    this.matSnackBar.open(\"Atualizado com sucesso!\", null, {\r\n                        duration: 5000,\r\n                        panelClass: \"green-snackbar\",\r\n                    });\r\n                    this.router.navigateByUrl(\"/produtos\");\r\n                },\r\n                (error) => {\r\n                    this.matSnackBar.open(\"Erro ao atualizar\", null, {\r\n                        duration: 5000,\r\n                        panelClass: \"red-snackbar\",\r\n                    });\r\n                }\r\n            );\r\n        } else {\r\n            this.produtoService.cadastrar(produto).subscribe(\r\n                (itemCadastrado) => {\r\n                    this.matSnackBar.open(\"Cadastrado com sucesso!\", null, {\r\n                        duration: 5000,\r\n                        panelClass: \"green-snackbar\",\r\n                    });\r\n                    this.router.navigateByUrl(\"/produtos\");\r\n                },\r\n\r\n                error => this.handleErrorResponse(error)\r\n                // (error) => {\r\n                //     this.matSnackBar.open(\"Erro ao cadastrar\", null, {\r\n                //         duration: 5000,\r\n                //         panelClass: \"red-snackbar\",\r\n                //     });\r\n                // }\r\n            );\r\n\r\n\r\n        }\r\n    }\r\n}\r\n","<!-- Title group  -->\r\n<div class=\"title-group\">\r\n    <h1 class=\"mat-h1\">{{labelForm}} Produto</h1>\r\n    <mat-divider fxFlex=\"1 0\"></mat-divider>\r\n</div>\r\n<!-- Form -->\r\n<div class=\"inner-wrapper\">\r\n    <form [formGroup]=\"formCadastro\" (ngSubmit)=\"formCadastro.valid && salvar()\" novalidate>\r\n        <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"80px\" fxLayoutGap.lt-md=\"0px\">\r\n            <mat-form-field flex fxFlex>\r\n                <mat-label>Número do Produto</mat-label>\r\n                <input matInput pattern=\"[0-9]+$\" formControlName=\"numero\" placeholder=\"99999\" required>\r\n                <mat-error>Número do Produto inválido ou vazio</mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n        <!-- Left block -->\r\n        <mat-card>\r\n            <div class=\"controlers-wrapper\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>Nome</mat-label>\r\n                    <input matInput placeholder=\"Nome\" formControlName=\"nome\" required #name>\r\n                    <mat-error>Nome do Produto obrigatório</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>Detalhes</mat-label>\r\n                    <input matInput placeholder=\"Detalhes do Produto\" formControlName=\"detalhe\">\r\n                    <mat-error>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-label>Categoria</mat-label>\r\n                    <mat-select formControlName=\"categoria\" required>\r\n                        <mat-option *ngFor=\"let categoria of categorias\" [value]=\"categoria.id\">\r\n                            {{categoria.nome}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-label>Medida</mat-label>\r\n                    <mat-select formControlName=\"medida\" required>\r\n                        <mat-option *ngFor=\"let medida of medidas\" [value]=\"medida\">\r\n                            {{medida}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>Preço Custo</mat-label>\r\n                    <input matInput currencyMask placeholder=\"Preço de Custo\" formControlName=\"precoCusto\"\r\n                        [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" required>\r\n                    <mat-error>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>Preço Venda</mat-label>\r\n                    <input matInput currencyMask placeholder=\"Preço de Venda\" formControlName=\"precoVenda\"\r\n                        [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" required>\r\n                    <mat-error>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <section class=\"example-section\">\r\n                    <mat-label>Ativo</mat-label>\r\n                    <mat-checkbox id=\"ativo\" class=\"ativo\" color=\"primary\" formControlName=\"ativo\">\r\n                    </mat-checkbox>\r\n                    <mat-error>\r\n                    </mat-error>\r\n                </section>\r\n            </div>\r\n        </mat-card>\r\n        <mat-card-actions>\r\n            <button mat-raised-button color=\"primary\" [disabled]=\"!formCadastro.valid\">Salvar</button>\r\n            <button type=\"button\" mat-raised-button (click)=\"onClickVoltar()\">Voltar</button>\r\n        </mat-card-actions>\r\n    </form>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProdutoCadEditComponent } from './components/produto-cad-edit.component';\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: ProdutoCadEditComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProdutoCadEditRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MaterialModule } from 'src/app/material-module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ProdutoCadEditComponent } from './components/produto-cad-edit.component';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { NgxCurrencyModule } from \"ngx-currency\";\r\nimport { ProdutoCadEditRoutingModule } from './produto-cad-edit-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ProdutoCadEditComponent],\r\n  imports: [\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    MaterialFileInputModule,\r\n    NgxCurrencyModule,   \r\n    ProdutoCadEditRoutingModule, \r\n  ],\r\n  exports:[ProdutoCadEditComponent]\r\n\r\n})\r\nexport class ProdutoCadEditModule { }\r\n"],"sourceRoot":"webpack:///"}