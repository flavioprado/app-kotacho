{"version":3,"sources":["./src/app/produto/produto-cad-edit/components/produto-cad-edit.component.ts","./src/app/produto/produto-cad-edit/components/produto-cad-edit.component.html","./src/app/produto/produto-cad-edit/produto-cad-edit-routing.module.ts","./src/app/produto/produto-cad-edit/produto-cad-edit.module.ts"],"names":[],"mappings":"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","file":"produto-produto-cad-edit-produto-cad-edit-module.js","sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Endereco } from 'src/app/interfaces/endereco.model';\nimport * as _ from 'lodash';\nimport { ProdutoService } from '../../produto.service';\nimport { Produto } from 'src/app/interfaces/produto.model';\nimport { FileValidator } from 'ngx-material-file-input';\nimport { Categoria } from 'src/app/categoria/categoria.model';\nimport { CategoriaService } from 'src/app/categoria/categoria.service';\nimport { DialogService } from 'src/app/_shared/dialog.service';\n\n\n@Component({\n    selector: 'app-produto-cad-edit',\n    templateUrl: './produto-cad-edit.component.html',\n    styleUrls: ['./produto-cad-edit.component.css']\n})\nexport class ProdutoCadEditComponent implements OnInit {\n    @ViewChild(\"name\") nameField: ElementRef;\n\n    imgFile: any;\n    emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\n    formCadastro: FormGroup;\n    produto: Produto;\n    labelForm: string;\n    medidas: string[] = ['UNIDADE', 'KG', 'CX'];\n    categorias: Categoria[];\n    readonly imageMaxSize = 2097152;\n    categoria: any;\n\n    constructor(\n        public dialog: MatDialog,\n        private dialogService: DialogService,\n        private fb: FormBuilder,\n        private produtoService: ProdutoService,\n        private categoriaService: CategoriaService,\n        private router: Router,\n        private route: ActivatedRoute,\n        public matDialog: MatDialog,\n        public matSnackBar: MatSnackBar\n    ) {\n\n    }\n\n    ngOnInit() {\n\n        let id = this.route.snapshot.paramMap.get('id');\n\n        this.labelForm = id ? 'Editar' : 'Cadastrar';\n\n        if (id) {\n            this.loadProduto(id);\n        }\n        this.buildForm();\n        this.loadCategorias();\n\n    }\n    // editName(): void {\n    //     this.nameField.nativeElement.focus();\n    //   }\n\n    loadProduto(id) {\n        this.produtoService.pesquisarPorId(id).subscribe((produto) => {\n            this.produto = produto;\n            this.formCadastro.patchValue(produto);\n            this.formCadastro.patchValue({\n                categoria: produto.categoria.id\n            });\n\n        })\n    }\n\n    loadCategorias() {\n        this.categoriaService.list().subscribe((dados) => {\n            this.categorias = dados;\n        })\n    }\n\n    ngAfterViewInit() {\n        // this.nameField.nativeElement.focus();\n    }\n    private setValueOnForm(form: FormGroup, pathOnForm: string, value: any) {\n        if (value) {\n            form.get(pathOnForm).setValue(value);\n        }\n    }\n    private loadObjectInForm(produto: Produto) {\n        //this.formCadastro.get('nome').setValue(produto.nome);\n        //  this.formCadastro.get('categoria').setValue(produto.categoria.id);\n        //this.formCadastro.patchValue(produto);\n        //this.formCadastro.patchValue({\n        this.categoria = produto.categoria;\n        // });\n\n    }\n\n    onClickVoltar() {\n        this.router.navigateByUrl('/produtos');\n    }\n\n    buildForm() {\n        let emailregex: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        this.formCadastro = this.fb.group({\n            id: null,\n            numero: [null, Validators.required],\n            nome: [null, Validators.required],\n            detalhe: [\"\"],\n            image: [undefined, [FileValidator.maxContentSize(this.imageMaxSize)]],\n            categoria: [null, Validators.required],\n            medida: [\"\", Validators.required],\n            ativo: [true, Validators.required],\n            precoCusto: [\"\", [Validators.required]],\n            precoVenda: [\"\", [Validators.required]],\n        });\n    }\n\n\n    transform(value: number): any {\n        let formatedValue: string;\n\n        if (!value) {\n            return formatedValue;\n        }\n\n        if (typeof value === 'string') {\n            value = Number.parseFloat(value);\n        }\n\n        formatedValue = value.toFixed(2).replace('.', ',');\n\n        formatedValue = formatedValue.replace(/(\\d)(?=(\\d{3})+\\,)/g, '$1.');\n\n        return formatedValue;\n    }\n    upload(event) {\n        const file = event.target.files[0];\n        // this.produtoService.uploadImage(file).subscribe();\n        this.produtoService.uploadImage(file).subscribe();\n\n\n    }\n\n    onFileChange(event) {\n        if (event.target.files.length > 0) {\n            const file = event.target.files[0];\n            //  this.formCadastro.get('image').setValue(file);\n            this.imgFile = this.imageToBase64(file.name);\n        } else {\n            this.imgFile = null;\n        }\n\n        // const promise = getBase64(my_pdf_file);\n        // promise.then(function (result) {\n        //     // console.log(result);\n        //     var test_variable = result;\n        //     console.log(test_variable);\n        // });\n    }\n\n    // BEGIN from:  https://stackoverflow.com/a/47245396/1063287\n    getBase64(file) {\n        // return new Promise(function (resolve, reject) {\n        //     var reader = new FileReader();\n        //     reader.onload = function () { resolve(reader.result); \n        //     reader.onerror = reject;\n        //     reader.readAsDataURL(file);\n        // })));\n    }\n\n    async getBase64OLd(file) {\n        var reader = new FileReader();\n        reader.onload = function () {\n            console.log(reader.result);\n        };\n        reader.onerror = function (error) {\n            console.log('Error: ', error);\n        };\n        reader.readAsDataURL(file);\n\n        // for (var i = 0; i < file.length; i++) {\n        //     var file=file[i];    \n        //     reader = new FileReader();\n        //     reader.onload = function(){\n        //         alert(file.name);\n        //         alert(this.result);\n        //     };\n        // reader.readAsText(file);\n\n    }\n\n    async onChangeSelectFile(event) {\n        // let retorno: any;\n        // let file = event.target.files[0];\n        // if (file) {\n        //     const promise = this.getBase64(file);\n        //     await promise.then(function (result) {\n        //         retorno = result;\n        //     });\n        // }\n        // this.imgFile = retorno;\n    }\n\n    imageToBase64(img) {\n        var canvas, ctx, dataURL, base64;\n        canvas = document.createElement(\"canvas\");\n        ctx = canvas.getContext(\"2d\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n        dataURL = canvas.toDataURL(\"image/png\");\n        base64 = dataURL.replace(/^data:image\\/png;base64,/, \"\");\n        return base64;\n    }\n\n    receivedChildMessage: string;\n    getUploadedFile(message: string) {\n        console.log('path ' + JSON.stringify(message));\n        this.receivedChildMessage = message;\n    }\n\n    private handleErrorResponse(errorResponse) {\n        switch (errorResponse.status) {\n            case 400:\n            case 500:\n            default:\n                this.matSnackBar.open(errorResponse.error.message, null, {\n                    duration: 5000,\n                    panelClass: \"red-snackbar\",\n                });\n        }\n    }\n\n\n    salvar() {\n        const {\n            id,\n            numero,\n            nome,\n            categoria,\n            medida,\n            precoCusto,\n            precoVenda,\n            ativo,\n            detalhe,\n            image\n\n        } = this.formCadastro.value;\n\n        const produto = {\n            id,\n            numero,\n            nome,\n            categoria,\n            medida,\n            precoCusto,\n            precoVenda,\n            ativo,\n            detalhe,\n            image\n        } as Produto;\n\n        produto.image = this.imgFile;\n\n        if (produto && produto.id) {\n            this.produtoService.atualizar(produto).subscribe(\n                (itemAtualizado) => {\n                    this.matSnackBar.open(\"Atualizado com sucesso!\", null, {\n                        duration: 5000,\n                        panelClass: \"green-snackbar\",\n                    });\n                    this.router.navigateByUrl(\"/produtos\");\n                },\n                (error) => {\n                    this.matSnackBar.open(\"Erro ao atualizar\", null, {\n                        duration: 5000,\n                        panelClass: \"red-snackbar\",\n                    });\n                }\n            );\n        } else {\n            this.produtoService.cadastrar(produto).subscribe(\n                (itemCadastrado) => {\n                    this.matSnackBar.open(\"Cadastrado com sucesso!\", null, {\n                        duration: 5000,\n                        panelClass: \"green-snackbar\",\n                    });\n                    this.router.navigateByUrl(\"/produtos\");\n                },\n\n                error => this.handleErrorResponse(error)\n                // (error) => {\n                //     this.matSnackBar.open(\"Erro ao cadastrar\", null, {\n                //         duration: 5000,\n                //         panelClass: \"red-snackbar\",\n                //     });\n                // }\n            );\n\n\n        }\n    }\n}\n","<!-- Title group  -->\n<div class=\"title-group\">\n    <h1 class=\"mat-h1\">{{labelForm}} Produto</h1>\n    <mat-divider fxFlex=\"1 0\"></mat-divider>\n</div>\n<!-- Form -->\n<div class=\"inner-wrapper\">\n    <form [formGroup]=\"formCadastro\" (ngSubmit)=\"formCadastro.valid && salvar()\" novalidate>\n        <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"80px\" fxLayoutGap.lt-md=\"0px\">\n            <mat-form-field flex fxFlex>\n                <mat-label>Número do Produto</mat-label>\n                <input matInput pattern=\"[0-9]+$\" formControlName=\"numero\" placeholder=\"99999\" required>\n                <mat-error>Número do Produto inválido ou vazio</mat-error>\n            </mat-form-field>\n        </div>\n        <!-- Left block -->\n        <mat-card>\n            <div class=\"controlers-wrapper\">\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Nome</mat-label>\n                    <input matInput placeholder=\"Nome\" formControlName=\"nome\" required #name>\n                    <mat-error>Nome do Produto obrigatório</mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Detalhes</mat-label>\n                    <input matInput placeholder=\"Detalhes do Produto\" formControlName=\"detalhe\">\n                    <mat-error>\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>Categoria</mat-label>\n                    <mat-select formControlName=\"categoria\" required>\n                        <mat-option *ngFor=\"let categoria of categorias\" [value]=\"categoria.id\">\n                            {{categoria.nome}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>Medida</mat-label>\n                    <mat-select formControlName=\"medida\" required>\n                        <mat-option *ngFor=\"let medida of medidas\" [value]=\"medida\">\n                            {{medida}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Preço Custo</mat-label>\n                    <input matInput currencyMask placeholder=\"Preço de Custo\" formControlName=\"precoCusto\"\n                        [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" required>\n                    <mat-error>\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Preço Venda</mat-label>\n                    <input matInput currencyMask placeholder=\"Preço de Venda\" formControlName=\"precoVenda\"\n                        [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" required>\n                    <mat-error>\n                    </mat-error>\n                </mat-form-field>\n                <section class=\"example-section\">\n                    <mat-label>Ativo</mat-label>\n                    <mat-checkbox id=\"ativo\" class=\"ativo\" color=\"primary\" formControlName=\"ativo\">\n                    </mat-checkbox>\n                    <mat-error>\n                    </mat-error>\n                </section>\n            </div>\n        </mat-card>\n        <mat-card-actions>\n            <button mat-raised-button color=\"primary\" [disabled]=\"!formCadastro.valid\">Salvar</button>\n            <button type=\"button\" mat-raised-button (click)=\"onClickVoltar()\">Voltar</button>\n        </mat-card-actions>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProdutoCadEditComponent } from './components/produto-cad-edit.component';\n\nconst routes: Routes = [\n  { path: \"\", component: ProdutoCadEditComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProdutoCadEditRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MaterialModule } from 'src/app/material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ProdutoCadEditComponent } from './components/produto-cad-edit.component';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { NgxCurrencyModule } from \"ngx-currency\";\nimport { ProdutoCadEditRoutingModule } from './produto-cad-edit-routing.module';\n\n\n@NgModule({\n  declarations: [ProdutoCadEditComponent],\n  imports: [\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    MaterialFileInputModule,\n    NgxCurrencyModule,   \n    ProdutoCadEditRoutingModule, \n  ],\n  exports:[ProdutoCadEditComponent]\n\n})\nexport class ProdutoCadEditModule { }\n"],"sourceRoot":"webpack:///"}