{"version":3,"sources":["./src/app/item-table/item-table.component.ts","./src/app/item-table/item-table.component.html","./src/app/pedido/pedido-cad-edit/componentes/pedido-cad-edit.component.ts","./src/app/pedido/pedido-cad-edit/componentes/pedido-cad-edit.component.html","./src/app/pedido/pedido-cad-edit/pedido-cad-edit-routing.module.ts","./src/app/pedido/pedido-cad-edit/pedido-cad-edit.module.ts"],"names":[],"mappings":"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","file":"2.de2efc05e7cfe6c3f936.js","sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\r\nimport {DataSource} from '@angular/cdk/table';\r\nimport {Observable} from 'rxjs';\r\n\r\n\r\nimport {FormGroup} from '@angular/forms';\r\nimport { PedidoService } from '../pedido/pedido.service';\r\nimport { Item } from '../model/item';\r\n\r\n@Component({\r\n  selector: 'app-item-table',\r\n  templateUrl: './item-table.component.html',\r\n  styleUrls: ['./item-table.component.css']\r\n})\r\nexport class ItemTableComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['produto', 'qtde', 'subtotal', 'actions'];\r\n  dataSource = new ItemDataSource(this.pedidoService);\r\n\r\n  @Input() form: FormGroup;\r\n\r\n  constructor(private pedidoService: PedidoService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  onDeleteItem(item: Item) {\r\n    this.pedidoService.removeItem(item);\r\n  }\r\n\r\n  onEditItem(item: Item) {\r\n  //  this.pedidoService.removeItem(item);\r\n    this.form.get('item').patchValue(item);\r\n  }\r\n}\r\n\r\nexport class ItemDataSource extends DataSource<any> {\r\n\r\n  constructor(private pedidoService: PedidoService) {\r\n    super();\r\n  }\r\n\r\n  connect(): Observable<Item[] | readonly Item[]> {\r\n    return this.pedidoService.loadItemes();\r\n  }\r\n\r\n  disconnect() {\r\n    this.pedidoService.OnDestroy();\r\n  }\r\n\r\n}\r\n"," <table mat-table [dataSource]=\"dataSource\"  class=\"mat-elevation-z8\" >\r\n    <!--- Note that these columns can be defined in any order.\r\n          The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"produto\">\r\n      <th mat-header-cell *matHeaderCellDef> Produto </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.nome}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"qtde\">\r\n      <th mat-header-cell *matHeaderCellDef> Quantidade </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.quantidade}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Weight Column -->\r\n    <ng-container matColumnDef=\"subtotal\">\r\n      <th mat-header-cell *matHeaderCellDef> Subtotal </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.subtotal}} </td>\r\n    </ng-container>\r\n\r\n  \r\n    <!-- Actions-->\r\n    <ng-container matColumnDef=\"actions\">\r\n      <th mat-header-cell  *matHeaderCellDef>Actions </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <button mat-icon-button (click)=\"onEditItem(element)\" class=\"iconbutton\" color=\"primary\">\r\n            <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button (click)=\"onDeleteItem(element)\" class=\"iconbutton\" color=\"warn\">\r\n            <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { DialogoConfirmacaoComponent } from 'src/app/_shared/dialogo-confirmacao/dialogo-confirmacao.component';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Pedido } from '../../pedido.model';\nimport { PedidoService } from '../../pedido.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Endereco } from 'src/app/interfaces/endereco.model';\nimport * as _ from 'lodash';\nimport { Item } from 'src/app/model/item';\nimport { Cliente } from 'src/app/cliente/cliente.model';\nimport { ClienteService } from 'src/app/cliente/cliente.service';\nimport { Produto } from 'src/app/interfaces/produto.model';\nimport { ProdutoService } from 'src/app/produto/produto.service';\n\n\n@Component({\n    selector: 'app-pedido-cad-edit',\n    templateUrl: './pedido-cad-edit.component.html',\n    styleUrls: ['./pedido-cad-edit.component.css']\n})\nexport class PedidoCadEditComponent implements OnInit {\n    @ViewChild(\"name\") nameField: ElementRef;\n\n\n    emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\n    formCadastro: FormGroup;\n    pedido: Pedido;\n    endereco: Endereco;\n    labelForm: string;\n    produto : Produto;\n\n\n    clientes = Array<Cliente>();\n    produtos = Array<Produto>();\n\n\n    constructor(\n        private fb: FormBuilder,\n        private pedidoService: PedidoService,\n        private produtoService: ProdutoService,\n        private clienteService: ClienteService,\n        private router: Router,\n        private route: ActivatedRoute,\n        public matDialog: MatDialog,\n        public matSnackBar: MatSnackBar\n    ) { }\n\n    ngOnInit() {\n\n        let id = this.route.snapshot.paramMap.get('id');\n\n        this.labelForm = id ? 'Editar' : 'Cadastrar';\n\n        if (id) {\n            this.loadPedido(id);\n        }\n\n        this.buildForm();\n        this.loadClientes();\n        this.loadProdutos();\n\n    }\n    // editName(): void {\n    //     this.nameField.nativeElement.focus();\n    //   }\n\n    loadPedido(id) {\n        this.pedidoService.pesquisarPorId(id).subscribe((pedido) => {\n            this.pedido = pedido;\n            this.loadObjectInForm(pedido);\n        })\n    }\n    onChangeProduto(event){\n        console.log('escolheu prod'+JSON.stringify(event))\n        this.formCadastro.get('item.medida').setValue('KG');\n    }\n\n    ngAfterViewInit() {\n        // this.nameField.nativeElement.focus();\n    }\n    private setValueOnForm(form: FormGroup, pathOnForm: string, value: any) {\n        if (value) {\n            form.get(pathOnForm).setValue(value);\n        }\n    }\n    private loadObjectInForm(pedido: Pedido) {\n        this.formCadastro.patchValue(pedido);\n    }\n\n    buildForm() {\n        this.formCadastro = this.fb.group({\n            id: null,\n            cliente: [\"\", Validators.required],\n            status: [\"Pendente\", Validators.required],\n            desconto: [\"0.00\"],\n            total: [\"0.00\", Validators.required],\n            obs: [\"\"],\n\n            item: this.fb.group({\n                produto: [null],\n                quantidade: [null],\n                medida:[\"\"],\n                subtotal: [null],\n            })\n        });\n    }\n\n\n    loadClientes() {\n        this.clienteService.getClientes().subscribe(clientes => this.clientes = clientes);\n    }\n\n  async loadProdutos() {\n      await  this.produtoService.getProdutos().subscribe(produtos => this.produtos = produtos);\n     \n    }\n\n    getErrorEmail() {\n        return this.formCadastro.get('email').hasError('required') ? 'Email é obrigatório' :\n            this.formCadastro.get('email').hasError('pattern') ? 'Email inválido' :\n                this.formCadastro.get('email').hasError('alreadyInUse') ? 'This emailaddress is already in use' : '';\n    }\n\n    getErrorCnpj() {\n        const valida = this.formCadastro.get('cnpj').hasError('required') ? 'CNPJ é obrigatório' :\n            this.formCadastro.get('cnpj').hasError('pattern') ? 'CNPJ inválido' :\n                this.formCadastro.get('cnpj').hasError('digit') ? 'CNPJ inválido' : '';\n\n        return valida;\n\n    }\n\n    getErrorCep() {\n        const cep = this.formCadastro.get('endereco.cep').value;\n        const retorno = this.formCadastro.get('endereco.cep').hasError('required') ? 'CEP é obrigatório' :\n            this.formCadastro.get('endereco.cep').hasError('pattern') ? 'CEP inválido' : '';\n        return retorno;\n\n    }\n\n    onAddItem() {\n        // const valueSubmit = Object.assign({}, this.form.value);\n        // this.personService.addAddress(Object.assign({}, valueSubmit.address));\n        // this.reset();\n    }\n\n    deleteItem(item: Item) {\n        // this.personService.removeAddress(address);\n    }\n\n    loadCepInForm(result) {\n        this.formCadastro.get('endereco.logradouro').setValue(result.logradouro);\n        this.formCadastro.get('endereco.bairro').setValue(result.bairro);\n        this.formCadastro.get('endereco.cidade').setValue(result.localidade);\n        this.formCadastro.get('endereco.uf').setValue(result.uf);\n    }\n\n    salvar() {\n        const {\n            numero,\n            status,\n            item\n\n        } = this.formCadastro.value;\n\n        const pedido = {\n            numero,\n            status\n            \n\n        } as Pedido;\n\n        pedido.id = this.formCadastro.get('id').value;\n\n\n        if (this.pedido && this.pedido.id) {\n            this.pedidoService.atualizar(pedido).subscribe(\n                (itemAtualizado) => {\n                    this.matSnackBar.open(\"Atualizado com sucesso!\", null, {\n                        duration: 5000,\n                        panelClass: \"green-snackbar\",\n                    });\n                    this.router.navigateByUrl(\"/pedidos\");\n                },\n                (error) => {\n                    this.matSnackBar.open(\"Erro ao atualizar\", null, {\n                        duration: 5000,\n                        panelClass: \"red-snackbar\",\n                    });\n                }\n            );\n        } else {\n            this.pedidoService.cadastrar(this.formCadastro.value).subscribe(\n                (itemCadastrado) => {\n                    this.matSnackBar.open(\"Cadastrado com sucesso!\", null, {\n                        duration: 5000,\n                        panelClass: \"green-snackbar\",\n                    });\n                    this.router.navigateByUrl(\"/pedidos\");\n                },\n                (error) => {\n                    this.matSnackBar.open(\"Erro ao cadastrar\", null, {\n                        duration: 5000,\n                        panelClass: \"red-snackbar\",\n                    });\n                }\n            );\n        }\n    }\n\n    deletar() {\n        const dialogoReferencia = this.matDialog.open(DialogoConfirmacaoComponent);\n\n        dialogoReferencia.afterClosed().subscribe((valorResposta) => {\n            if (valorResposta) {\n                this.pedidoService.deletar(this.pedido).subscribe(\n                    (response) => {\n                        this.matSnackBar.open(\"Item deletado com sucesso!\", null, {\n                            duration: 5000,\n                            panelClass: \"green-snackbar\",\n                        });\n                        this.router.navigateByUrl(\"/itens\");\n                    },\n                    (error) => {\n                        this.matSnackBar.open(\"Erro ao deletar\", null, {\n                            duration: 5000,\n                            panelClass: \"red-snackbar\",\n                        });\n                    }\n                );\n            }\n        });\n    }\n}\n","<div class=\"title-group\">\n  <h1 class=\"mat-h1\">{{labelForm}} Pedido</h1>\n  <mat-divider fxFlex=\"1 0\"></mat-divider>\n</div>\n<form fxLayout=\"column\" [formGroup]=\"formCadastro\">\n  <mat-card>\n    <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n      <mat-form-field fxFlex=\"25\">\n        <mat-label>Cliente</mat-label>\n        <mat-select formControlName=\"cliente\" required>\n          <mat-option *ngFor=\"let cliente of clientes\" [value]=\"cliente.cli_id\">\n            {{cliente.nome}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <br>\n    <br>\n\n    <mat-card formGroupName=\"item\">\n      <mat-card-header>\n        <mat-card-title>Item</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n\n        <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n          <mat-form-field fxFlex=\"25\">\n            <mat-label>Produto</mat-label>\n            <mat-select formControlName=\"produto\" #product (selectionChange)='onChangeProduto(product)' required>\n              <mat-option *ngFor=\"let produto of produtos\" [value]=\"produto\">\n                {{produto.nome}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <p> Medida: {{formCadastro.get('item').value | json}} </p>\n\n          <mat-form-field fxFlex=\"10\">\n            <input matInput type=\"text\" placeholder=\"quantidade\" formControlName=\"quantidade\" required>\n          </mat-form-field>\n\n          <mat-form-field fxFlex=\"25\">\n            <input matInput type=\"text\" placeholder=\"subtotal\" formControlName=\"subtotal\" readonly>\n          </mat-form-field>\n        </div>\n      </mat-card-content>\n\n\n      <button mat-stroked-button color=\"primary\" (click)=\"onAddItem()\">\n        <mat-icon>add_circle</mat-icon>\n        Adicionar\n      </button>\n      <br>\n      <br>\n    </mat-card>\n  </mat-card>\n  <app-item-table [form]=\"formCadastro\"></app-item-table>\n</form>\n<!-- <app-debug [form]=\"form\"></app-debug>   -->","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PedidoCadEditComponent } from './componentes/pedido-cad-edit.component';\nconst routes: Routes = [\n  {path: \"\", component: PedidoCadEditComponent}\n];\n\n@NgModule({\n imports: [RouterModule.forChild(routes)],\n exports: [RouterModule]\n})\nexport class PedidoCadEditRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PedidoCadEditRoutingModule } from './pedido-cad-edit-routing.module';\nimport { PedidoCadEditComponent } from './componentes/pedido-cad-edit.component';\nimport { MaterialModule } from 'src/app/material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMaskModule, IConfig } from 'ngx-mask'\nimport { ItemTableComponent } from 'src/app/item-table/item-table.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nconst maskConfig: Partial<IConfig> = {\n  validation: false,\n};\n\n\n@NgModule({\n  declarations: [PedidoCadEditComponent, ItemTableComponent],\n  imports: [\n    NgxMaskModule.forRoot(maskConfig),\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    PedidoCadEditRoutingModule,\n    FlexLayoutModule\n  ]\n})\nexport class PedidoCadEditModule { }\n"],"sourceRoot":"webpack:///"}