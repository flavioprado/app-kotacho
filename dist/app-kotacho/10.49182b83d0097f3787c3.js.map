{"version":3,"sources":["./src/app/_util/Pagination.ts","./src/app/produto/produto.service.ts","./src/app/produto/produto-listar/produto-listar.module.ts","./src/app/produto/produto-listar/components/produto-listar-routing.module.ts","./src/app/produto/produto-listar/components/produto-listar.component.ts","./src/app/produto/produto-listar/components/produto-listar.component.html"],"names":[],"mappings":"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","file":"10.49182b83d0097f3787c3.js","sourcesContent":["export interface SortQuery {\r\n    property: string,\r\n    direction: string\r\n}\r\n\r\nexport interface PageQuery {\r\n    pageNumber: number,\r\n    pageSize: number\r\n}\r\n\r\nexport interface QueryBuilder {\r\n    pageQuery: PageQuery;\r\n    sortQuery: SortQuery;\r\n    aditionalQuery: Map<string, string>;\r\n    buildQueryMap(): Map<string, string>;\r\n    buildQueryString(): string;\r\n    buildPageQueryMap(): Map<string, string>;\r\n    buildSortQueryMap(): Map<string, string>;\r\n}\r\n\r\nexport class PageRequest implements QueryBuilder {\r\n\r\n    constructor(public pageQuery: PageQuery, public sortQuery: SortQuery, public aditionalQuery: Map<string, string>) { }\r\n\r\n    buildQueryMap(): Map<string, string> {\r\n\r\n        let buildQueryMap = new Map<string, string>([...this.buildPageQueryMap(), ...this.buildSortQueryMap()]);\r\n\r\n        if (this.aditionalQuery) {\r\n            buildQueryMap = new Map<string, string>([...buildQueryMap, ...this.aditionalQuery])\r\n        }\r\n\r\n        return buildQueryMap;\r\n    }\r\n\r\n    buildQueryString(): string {\r\n\r\n        return Array.from(this.buildQueryMap()).map(itemArray => `${itemArray[0]}=${itemArray[1]}`).join(\"&\");\r\n\r\n    }\r\n\r\n    buildPageQueryMap(): Map<string, string> {\r\n\r\n        let buildPageQueryMap = new Map<string, string>();\r\n\r\n        buildPageQueryMap.set(\"_page\", `${this.pageQuery.pageNumber + 1}`);\r\n        buildPageQueryMap.set(\"_limit\", `${this.pageQuery.pageSize}`);\r\n\r\n        return buildPageQueryMap;\r\n\r\n    }\r\n\r\n    buildSortQueryMap(): Map<string, string> {\r\n\r\n        let buildPageQueryMap = new Map<string, string>();\r\n\r\n        buildPageQueryMap.set(\"_sort\", `${this.sortQuery.property}`);\r\n        buildPageQueryMap.set(\"_order\", `${this.sortQuery.direction}`);\r\n\r\n        return buildPageQueryMap;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class Page<T> {\r\n\r\n    constructor(public content: T[], public totalElements: number){}\r\n\r\n    static fromResponse<T>(response:any){\r\n        return new Page<T>(response.body, parseInt(response.headers.get(\"X-Total-Count\")));\r\n    }\r\n    \r\n}","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable, EMPTY } from \"rxjs\";\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { QueryBuilder, Page } from '../_util/Pagination';\r\nimport { environment } from 'src/environments/environment';\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Produto } from '../interfaces/produto.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProdutoService {\r\n    private baseURL = environment.api.apiUrl;\r\n\r\n    private endpoint = 'produtos';\r\n\r\n\r\n    constructor(private snackBar: MatSnackBar,\r\n        private httpClient: HttpClient) { }\r\n\r\n    listar(queryBuilder: QueryBuilder): Observable<Page<Produto>> {\r\n\r\n        return this.httpClient\r\n            .get<Produto[]>(`${this.baseURL}/${this.endpoint}?${queryBuilder.buildQueryString()}`, { observe: 'response' })\r\n            .pipe(\r\n                map(response => <Page<Produto>>Page.fromResponse(response))\r\n            );\r\n\r\n    }\r\n\r\n    cadastrar(produto: Produto): Observable<HttpResponse<Produto>> {\r\n        return this.httpClient.post<Produto>(`${this.baseURL}/${this.endpoint}`, produto, {\r\n            observe: 'response'\r\n        });\r\n    }\r\n\r\n    // save(documentoAmbiental: DocumentoAmbientalResource): Observable<EntityResponseType> {\r\n    //     return this.http.post<DocumentoAmbientalResource>(this.resourceUrl, documentoAmbiental, {\r\n    //       observe: 'response'\r\n    //     });\r\n    //   }\r\n\r\n    //   delete(documentoAmbiental: DocumentoAmbientalResource): Observable<EntityResponseType> {\r\n    //     return this.http.delete<DocumentoAmbientalResource>(\r\n    //       this.resourceUrl + '/' + documentoAmbiental.id,\r\n    //       {\r\n    //         observe: 'response'\r\n    //       }\r\n    //     );\r\n    //   }\r\n\r\n    pesquisarPorId(id: string): Observable<Produto> {\r\n        return this.httpClient.get<Produto>(`${this.baseURL}/${this.endpoint}/${id}`);\r\n    }\r\n    pesquisarPorCod(cod: number): Observable<Produto> {\r\n        return this.httpClient.get<Produto>(`${this.baseURL}/${this.endpoint}/${cod}/cod`);\r\n    }\r\n\r\n    atualizar(produto: Produto): Observable<Produto> {\r\n        const result = this.httpClient.post<Produto>(`${this.baseURL}/${this.endpoint}`, produto);\r\n        return result;\r\n    }\r\n\r\n    deletar(_id: string): Observable<{}> {\r\n        return this.httpClient.delete(`${this.baseURL}/${this.endpoint}/${_id}`);\r\n    }\r\n    uploadImage(file: any): Observable<any> {\r\n        return this.httpClient.post<any>(`${this.baseURL}/${this.endpoint}/upload`, file);\r\n    }\r\n    getProdutos(): Observable<Produto[]> {\r\n        return this.httpClient.get<Produto[]>(`${this.baseURL}/${this.endpoint}`).pipe(\r\n            map((obj) => obj),\r\n            catchError((e) => this.errorHandler(e))\r\n        );\r\n    }\r\n    showMessage(msg: string, isError: boolean = false): void {\r\n        this.snackBar.open(msg, \"X\", {\r\n            duration: 3000,\r\n            horizontalPosition: \"right\",\r\n            verticalPosition: \"top\",\r\n            panelClass: isError ? [\"msg-error\"] : [\"msg-success\"],\r\n        });\r\n    }\r\n    errorHandler(e: any): Observable<any> {\r\n        this.showMessage(\"Ocorreu um erro!\", true);\r\n        return EMPTY;\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MaterialModule } from 'src/app/material-module';\r\nimport { ProdutoListarComponent } from './components/produto-listar.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxCurrencyModule } from 'ngx-currency';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { ProdutoListarRoutingModule } from './components/produto-listar-routing.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [ProdutoListarComponent],\r\n  imports: [\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    ProdutoListarRoutingModule,\r\n    MaterialFileInputModule,\r\n    NgxCurrencyModule,\r\n  ],\r\n  exports:[ProdutoListarComponent]\r\n\r\n})\r\nexport class ProdutoListarModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UploadModule } from 'src/app/upload/upload.module';\r\nimport { ProdutoListarComponent } from './produto-listar.component';\r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '',\r\n    component: ProdutoListarComponent,\r\n  }, \r\n\r\n \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProdutoListarRoutingModule { }\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\nimport { Page, PageRequest } from \"../../../_util/Pagination\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { take } from \"rxjs/operators\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from '@angular/router';\r\nimport { Produto } from 'src/app/interfaces/produto.model';\r\nimport { ProdutoService } from '../../produto.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogService } from 'src/app/_shared/dialog.service';\r\nimport { ConfirmDialogComponent, ConfirmDialogModel } from 'src/app/_shared/confirm-dialog/confirm-dialog.component';\r\n\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-produto-listar',\r\n    templateUrl: './produto-listar.component.html',\r\n    styleUrls: ['./produto-listar.component.css']\r\n})\r\nexport class ProdutoListarComponent implements OnInit {\r\n\r\n    colunasTabela = [\"numero\", \"nome\", \"detalhe\", \"medida\", \"ativo\", \"precoCusto\", \"precoVenda\", \"action\"];\r\n\r\n    page: Page<Produto> = new Page([], 0);\r\n    pageEvent: PageEvent;\r\n    sortEvent: Sort;\r\n\r\n    carregando = false;\r\n    service: any;\r\n    notificationService: any;\r\n\r\n    constructor(private produtoService: ProdutoService,\r\n        private router: Router,\r\n        public dialog: MatDialog,\r\n\r\n        public matDialog: MatDialog,\r\n        private matSnackBar: MatSnackBar,\r\n        private dialogService: DialogService\r\n\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.listarItens();\r\n    }\r\n\r\n    listarItens() {\r\n        this.carregando = true;\r\n        let queryAdicional;\r\n        this.produtoService\r\n            .listar(\r\n                new PageRequest(\r\n                    {\r\n                        pageNumber: this.pageEvent ? this.pageEvent.pageIndex : 0,\r\n                        pageSize: this.pageEvent ? this.pageEvent.pageSize : 5,\r\n                    },\r\n                    {\r\n                        property: this.sortEvent ? this.sortEvent.active : \"numero\",\r\n                        direction: this.sortEvent ? this.sortEvent.direction : \"asc\",\r\n                    },\r\n                    queryAdicional\r\n                )\r\n            )\r\n            .pipe(take(1))\r\n            .subscribe(\r\n                (page) => {\r\n                    this.page = page;\r\n                    this.carregando = false;\r\n                },\r\n                (error) => {\r\n                    this.page = new Page([], 0);\r\n                    this.carregando = false;\r\n                    this.matSnackBar.open(\"Erro ao listar Produtos\", null, {\r\n                        duration: 5000,\r\n                        panelClass: \"red-snackbar\",\r\n                    });\r\n                }\r\n            );\r\n    }\r\n\r\n    onEdit(row) {\r\n        this.router.navigateByUrl(`produtos/editar/${row.id}`);\r\n    }\r\n\r\n    onDelete($key) {\r\n        const message = `Tem certeza que deseja excluir esse registro?`;\r\n        const dialogData = new ConfirmDialogModel(\"Confirma ?\", message);\r\n\r\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n            maxWidth: \"400px\",\r\n            data: dialogData\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(res => {\r\n            if (res) {\r\n                this.produtoService.deletar($key).subscribe(() => {\r\n                    this.listarItens();\r\n                    this.matSnackBar.open(\"Excluído com sucesso!\", null, {\r\n                        duration: 5000,\r\n                        panelClass: \"green-snackbar\",\r\n                    });\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n}\r\n\r\n\r\n        //         goToAdd() {\r\n        //     this.router.navigateByUrl('/produtos/cadastrar');\r\n        // }\r\n        //     }\r\n\r\n","<div class=\"example-button-row right\">  \r\n  <button mat-fab color=\"success\" routerLink=\"/produtos/cadastrar\">\r\n    <mat-icon>add</mat-icon> \r\n  </button>\r\n</div>\r\n<div class=\"title-group\">\r\n  <h1 class=\"mat-h1\">Lista de Produtos</h1>\r\n  <mat-divider fxFlex=\"1 0\"></mat-divider>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z4\">\r\n  <table mat-table [dataSource]=\"page.content\" matSort (matSortChange)=\"sortEvent = $event; listarItens();\">\r\n    <!-- Id Column -->\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"numero\">\r\n      <th mat-header-cell *matHeaderCellDef>Numero</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.numero}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"nome\">\r\n      <th mat-header-cell *matHeaderCellDef>Nome</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"detalhe\">\r\n      <th mat-header-cell *matHeaderCellDef>Detalhe</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.detalhe}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"medida\">\r\n      <th mat-header-cell *matHeaderCellDef>Medida</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.medida}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"precoCusto\">\r\n      <th mat-header-cell *matHeaderCellDef>Preço Custo</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.precoCusto}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"precoVenda\">\r\n      <th mat-header-cell *matHeaderCellDef>Preço Venda</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.precoVenda}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"ativo\">\r\n      <th mat-header-cell *matHeaderCellDef>ativo</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.ativo?'SIM':'NÃO'}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef>Ações</th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <button mat-icon-button (click)=\"onEdit(row)\">\r\n          <mat-icon>launch</mat-icon>\r\n        </button>\r\n        <button mat-icon-button color=\"warn\" (click)=\"onDelete(row.id)\">\r\n          <mat-icon>delete_outline</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"colunasTabela\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: colunasTabela;\"></tr>\r\n  </table>\r\n</div>"],"sourceRoot":"webpack:///"}