{"version":3,"sources":["./src/app/_validators/cpf-cnpj.validator.ts","./node_modules/file-saver/dist/FileSaver.min.js","./src/app/cliente/cliente-cad-edit/componentes/cliente-cad-edit.component.ts","./src/app/cliente/cliente-cad-edit/componentes/cliente-cad-edit.component.html","./src/cep/cep.service.ts","./src/app/cliente/cliente-cad-edit/cliente-cad-edit-routing.module.ts","./src/app/cliente/cliente-cad-edit/cliente-cad-edit.module.ts"],"names":[],"mappings":"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","file":"cliente-cliente-cad-edit-cliente-cad-edit-module.js","sourcesContent":["import { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\r\nimport { ValidationErrors } from '@angular/forms';\r\n\r\nexport class CpfCnpjValidator implements Validator {\r\n\r\n    static cpfLength = 11;\r\n    static cnpjLength = 14;\r\n\r\n    /**\r\n     * Calcula o dígito verificador do CPF ou CNPJ.\r\n     */\r\n    static buildDigit(arr: number[]): number {\r\n        const isCpf = arr.length < CpfCnpjValidator.cpfLength;\r\n        const digit = arr\r\n            .map((val, idx) => val * ((!isCpf ? idx % 8 : idx) + 2))\r\n            .reduce((total, current) => total + current) % CpfCnpjValidator.cpfLength;\r\n\r\n        if (digit < 2 && isCpf) { return 0; } \r\n        if (digit < 2) { return 0; }\r\n\r\n        return CpfCnpjValidator.cpfLength - digit;\r\n    }\r\n\r\n    /**\r\n     * Valida um CPF ou CNPJ de acordo com seu dígito verificador.\r\n     */\r\n    static validate(c: AbstractControl): ValidationErrors | null {\r\n\r\n        const cpfCnpj = c.value.replace(/\\D/g, '');\r\n\r\n        // Verifica o tamanho da string.\r\n        if ([CpfCnpjValidator.cpfLength, CpfCnpjValidator.cnpjLength].indexOf(cpfCnpj.length) < 0) {\r\n            return { length: true };\r\n        }\r\n\r\n        // Verifica se todos os dígitos são iguais.\r\n        if (/^([0-9])\\1*$/.test(cpfCnpj)) {\r\n            return { equalDigits: true };\r\n        }\r\n\r\n        // A seguir é realizado o cálculo verificador.\r\n        const cpfCnpjArr: number[] = cpfCnpj.split('').reverse().slice(2);\r\n\r\n        cpfCnpjArr.unshift(CpfCnpjValidator.buildDigit(cpfCnpjArr));\r\n        cpfCnpjArr.unshift(CpfCnpjValidator.buildDigit(cpfCnpjArr));\r\n\r\n        if (cpfCnpj !== cpfCnpjArr.reverse().join('')) {\r\n            // Dígito verificador não é válido, resultando em falha.\r\n            return { digit: true };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Implementa a interface de um validator.\r\n     */\r\n    validate(c: AbstractControl): ValidationErrors | null {\r\n        return CpfCnpjValidator.validate(c);\r\n    }\r\n}","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { DialogoConfirmacaoComponent } from 'src/app/_shared/dialogo-confirmacao/dialogo-confirmacao.component';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Cliente } from '../../cliente.model';\nimport { ClienteService } from '../../cliente.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Endereco } from 'src/app/interfaces/endereco.model';\nimport * as _ from 'lodash';\nimport { CpfCnpjValidator } from 'src/app/_validators/cpf-cnpj.validator';\nimport { CepService } from '../../../../cep/cep.service';\nimport { saveAs } from 'file-saver';\n\n\n@Component({\n    selector: 'app-cliente-cad-edit',\n    templateUrl: './cliente-cad-edit.component.html',\n    styleUrls: ['./cliente-cad-edit.component.css']\n})\nexport class ClienteCadEditComponent implements OnInit {\n    @ViewChild(\"name\") nameField: ElementRef;\n\n\n    emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\n    formCadastro: FormGroup;\n    cliente: Cliente;\n    endereco: Endereco;\n    labelForm: string;\n\n    constructor(\n        private fb: FormBuilder,\n        private clienteService: ClienteService,\n        private cepService: CepService,\n        private router: Router,\n        private route: ActivatedRoute,\n        public matDialog: MatDialog,\n        public matSnackBar: MatSnackBar\n    ) { }\n\n    ngOnInit() {\n\n        let id = this.route.snapshot.paramMap.get('id');\n\n        this.labelForm = id ? 'Editar' : 'Cadastrar';\n\n        if (id) {\n            this.loadCliente(id);\n        }\n\n        this.buildForm();\n\n    }\n    // editName(): void {\n    //     this.nameField.nativeElement.focus();\n    //   }\n\n    loadCliente(id) {\n        this.clienteService.pesquisarPorId(id).subscribe((cliente) => {\n            this.cliente = cliente;\n            this.loadObjectInForm(cliente);\n        })\n    }\n\n\n    download() {\n        this.clienteService.download()\n            .subscribe(data => {\n                let blob = new Blob([data], { type: \"application/pdf;charset=utf-8\" });\n                saveAs(blob, data);\n            },\n                // error => {\n                //     this.componentUtils.exibirMensagem(\n                //         this.msgs,\n                //         \"Ocorreu um erro ao abrir o arquivo.\",\n                //         \"error\",\n                //         error\n                //     );\n                // }\n            );\n    }\n\n    ngAfterViewInit() {\n        // this.nameField.nativeElement.focus();\n    }\n    private setValueOnForm(form: FormGroup, pathOnForm: string, value: any) {\n        if (value) {\n            form.get(pathOnForm).setValue(value);\n        }\n    }\n    private loadObjectInForm(cliente: Cliente) {\n        // this.setValueOnForm(this.formCadastro, 'id', cliente.cli_id);\n        // this.setValueOnForm(this.formCadastro, 'nome', cliente.nome);\n        // this.setValueOnForm(this.formCadastro, 'email', cliente.email);\n        // this.setValueOnForm(this.formCadastro, 'telefone', cliente.telefone);\n        // this.setValueOnForm(this.formCadastro, 'cnpj', cliente.cnpj);\n        // this.setValueOnForm(this.formCadastro, 'senha', cliente.senha);\n        // this.setValueOnForm(this.formCadastro, 'endereco.logradouro', cliente.endereco.logradouro);\n        // this.setValueOnForm(this.formCadastro, 'endereco.cep', cliente.endereco.cep);\n        // this.setValueOnForm(this.formCadastro, 'endereco.numero', cliente.endereco.numero);\n        // this.setValueOnForm(this.formCadastro, 'endereco.cidade', cliente.endereco.cidade);\n        // this.setValueOnForm(this.formCadastro, 'endereco.uf', cliente.endereco.uf);\n        // this.setValueOnForm(this.formCadastro, 'endereco.bairro', cliente.endereco.bairro);\n        this.formCadastro.patchValue(cliente);\n    }\n\n    buildForm() {\n        let emailregex: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        this.formCadastro = this.fb.group({\n            id: null,\n            nome: [\"\", Validators.required],\n            cnpj: [\"\", [\n                Validators.required,\n                Validators.pattern(/^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2}$/),\n                // Validators.minLength(14),\n                // Validators.maxLength(25),\n                CpfCnpjValidator.validate,\n            ]],\n            email: [\"\", [Validators.required, Validators.pattern(emailregex)]],\n            telefone: [\"\", Validators.required],\n            senha: [\"\"],\n            ativo: [true],\n\n            endereco: this.fb.group({\n                logradouro: [\"\", Validators.required],\n                numero: [\"\", Validators.required],\n                complemento: [\"\"],\n                bairro: [\"\", Validators.required],\n                cidade: [\"\", Validators.required],\n                uf: [\"\", Validators.required],\n                // cep: [\"\", [Validators.required, Validators.pattern(/^\\d{5}-\\d{3}$/)]],\n                cep: [\"\", [Validators.required, Validators.pattern(/^\\d{5}-\\d{3}$/)]],\n\n            }),\n        });\n    }\n\n    getErrorEmail() {\n        return this.formCadastro.get('email').hasError('required') ? 'Email é obrigatório' :\n            this.formCadastro.get('email').hasError('pattern') ? 'Email inválido' :\n                this.formCadastro.get('email').hasError('alreadyInUse') ? 'This emailaddress is already in use' : '';\n    }\n\n    getErrorCnpj() {\n        const valida = this.formCadastro.get('cnpj').hasError('required') ? 'CNPJ é obrigatório' :\n            this.formCadastro.get('cnpj').hasError('pattern') ? 'CNPJ inválido' :\n                this.formCadastro.get('cnpj').hasError('digit') ? 'CNPJ inválido' : '';\n\n        return valida;\n\n    }\n\n    getErrorCep() {\n        const cep = this.formCadastro.get('endereco.cep').value;\n        const retorno = this.formCadastro.get('endereco.cep').hasError('required') ? 'CEP é obrigatório' :\n            this.formCadastro.get('endereco.cep').hasError('pattern') ? 'CEP inválido' : '';\n        return retorno;\n\n    }\n\n    pesquisarCep(cep: string) {\n        cep = cep.replace(/\\D/g, '');\n\n        if (cep) {\n            this.cepService.pesquisar(cep).subscribe(dados => {\n                this.loadCepInForm(dados);\n                console.log(dados);\n            })\n        }\n    }\n\n    loadCepInForm(result) {\n        this.formCadastro.get('endereco.logradouro').setValue(result.logradouro);\n        this.formCadastro.get('endereco.bairro').setValue(result.bairro);\n        this.formCadastro.get('endereco.cidade').setValue(result.localidade);\n        this.formCadastro.get('endereco.uf').setValue(result.uf);\n    }\n\n    salvar() {\n        const {\n            nome,\n            email,\n            telefone,\n            cnpj,\n            senha,\n            endereco\n        } = this.formCadastro.value;\n\n        const cliente = {\n            nome,\n            email,\n            telefone,\n            cnpj,\n            senha,\n            endereco\n        } as Cliente;\n\n        cliente.cli_id = this.formCadastro.get('id').value;\n\n\n        if (this.cliente && this.cliente.cli_id) {\n            this.clienteService.atualizar(cliente).subscribe(\n                (itemAtualizado) => {\n                    this.matSnackBar.open(\"Atualizado com sucesso!\", null, {\n                        duration: 5000,\n                        panelClass: \"green-snackbar\",\n                    });\n                    this.router.navigateByUrl(\"/clientes\");\n                },\n                (error) => {\n                    this.matSnackBar.open(\"Erro ao atualizar\", null, {\n                        duration: 5000,\n                        panelClass: \"red-snackbar\",\n                    });\n                }\n            );\n        } else {\n            this.clienteService.cadastrar(this.formCadastro.value).subscribe(\n                (itemCadastrado) => {\n                    this.matSnackBar.open(\"Cadastrado com sucesso!\", null, {\n                        duration: 5000,\n                        panelClass: \"green-snackbar\",\n                    });\n                    this.router.navigateByUrl(\"/clientes\");\n                },\n                (error) => {\n                    this.matSnackBar.open(\"Erro ao cadastrar\", null, {\n                        duration: 5000,\n                        panelClass: \"red-snackbar\",\n                    });\n                }\n            );\n        }\n    }\n\n    deletar() {\n        const dialogoReferencia = this.matDialog.open(DialogoConfirmacaoComponent);\n\n        dialogoReferencia.afterClosed().subscribe((valorResposta) => {\n            if (valorResposta) {\n                this.clienteService.deletar(this.cliente.cli_id).subscribe(\n                    (response) => {\n                        this.matSnackBar.open(\"Item deletado com sucesso!\", null, {\n                            duration: 5000,\n                            panelClass: \"green-snackbar\",\n                        });\n                        this.router.navigateByUrl(\"/itens\");\n                    },\n                    (error) => {\n                        this.matSnackBar.open(\"Erro ao deletar\", null, {\n                            duration: 5000,\n                            panelClass: \"red-snackbar\",\n                        });\n                    }\n                );\n            }\n        });\n    }\n}\n","<!-- Title group  -->\n<div class=\"title-group\">\n    <h1 class=\"mat-h1\">{{labelForm}} Cliente</h1>\n    <mat-divider fxFlex=\"1 0\"></mat-divider>\n</div>\n\n<!-- \n<form fxLayout=\"column\" [formGroup]=\"form\">\n    <mat-card >\n    <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n      <mat-form-field flex fxFlex>\n        <input matInput type=\"text\" placeholder=\"Name\" formControlName=\"name\">\n      </mat-form-field>\n  \n      <mat-form-field flex fxFlex>\n        <input matInput type=\"text\" placeholder=\"Last Name\" formControlName=\"lastName\" >\n      </mat-form-field>\n  \n  \n    </div>\n  \n    <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n      <mat-form-field flex fxFlex>\n        <input matInput  type=\"text\"  placeholder=\"E-mail\" formControlName=\"email\" >\n      </mat-form-field>\n  \n      <mat-form-field flex fxFlex>\n          <input matInput type=\"text\" placeholder=\"Phone\" formControlName=\"phone\" >\n        </mat-form-field>\n  \n    </div>\n    <br>\n    <br>\n  \n      <mat-card formGroupName=\"address\">\n        <mat-card-header>\n          <mat-card-title>Address</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n  \n            <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n                <mat-form-field flex fxFlex>\n                  <input matInput  type=\"text\"  placeholder=\"Description\" formControlName=\"description\">\n                </mat-form-field>\n            </div>\n  \n            <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n                <mat-form-field flex fxFlex=\"25\">\n                  <input matInput  type=\"text\"  placeholder=\"Zip-code\" formControlName=\"zipCode\" >\n                </mat-form-field>\n  \n                <mat-form-field flex fxFlex>\n                    <input matInput  type=\"text\"  placeholder=\"Place\" formControlName=\"place\">\n                </mat-form-field>\n            </div>\n  \n            <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n                <mat-form-field flex fxFlex=\"25\">\n                  <input matInput  type=\"text\"  placeholder=\"Neighborhood\" formControlName=\"neighborhood\" >\n                </mat-form-field>\n  \n                <mat-form-field flex fxFlex=\"17\">\n                    <input matInput  type=\"text\"  placeholder=\"Number\" formControlName=\"number\" >\n                </mat-form-field>\n  \n                <mat-form-field flex fxFlex>\n                    <input matInput  type=\"text\"  placeholder=\"Complement\" formControlName=\"complement\" >\n                </mat-form-field>\n            </div>\n            <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n              <mat-form-field flex fxFlex>\n                <mat-label>State</mat-label>\n                <mat-select formControlName=\"state\">\n                  <mat-option *ngFor=\"let state of states\" [value]=\"state.id\">\n                    {{state.name}}\n                  </mat-option>\n  \n                </mat-select>\n              </mat-form-field>\n  \n              <mat-form-field flex fxFlex>\n                <mat-label>City</mat-label>\n                <mat-select formControlName=\"city\">\n                  <mat-option *ngFor=\"let city of cities | async\"  [value]=\"city.name\">\n                    {{city.name}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n          </mat-card-content>\n  \n          <button mat-stroked-button  color=\"primary\" (click)=\"onAddAddress()\">\n              <mat-icon>add_circle</mat-icon>\n              Add\n          </button>\n          <br>\n          <br>\n  \n        <app-address-table [form]=\"form\"></app-address-table>\n      </mat-card>\n  \n      <app-debug [form]=\"form\"></app-debug>\n  \n  </mat-card>\n  </form> -->\n\n\n\n\n\n<!-- Form -->\n<div class=\"inner-wrapper\">\n    <form fxLayout=\"column\" [formGroup]=\"formCadastro\" (ngSubmit)=\"formCadastro.valid && salvar()\"\n        #resetFormCadastro=\"ngForm\" novalidate>\n        <!-- Left block -->\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>Dados Pessoais</mat-card-title>\n            </mat-card-header>\n            <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"80px\" fxLayoutGap.lt-md=\"0px\">\n                <mat-form-field flex fxFlex>\n                    <mat-label>Razão Social</mat-label>\n                    <input matInput placeholder=\"Nome\" formControlName=\"nome\" required #name>\n                    <mat-error>Razão Social é obrigatória</mat-error>\n                </mat-form-field>\n\n            </div>\n            <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"100px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field flex fxFlex>\n                    <mat-label>CNPJ</mat-label>\n                    <input matInput placeholder=\"CNPJ\" mask=\"00.000.000/0000-00\" [dropSpecialCharacters]=\"false\"\n                        formControlName=\"cnpj\" required>\n                    <mat-error *ngIf=\"!formCadastro.controls['cnpj'].valid && formCadastro.controls['cnpj'].touched\">\n                        {{getErrorCnpj()}}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n                <mat-form-field flex fxFlex>\n                    <mat-label>Email</mat-label>\n                    <input matInput placeholder=\"Email\" formControlName=\"email\" required autocomplete=\"off\">\n                    <mat-error *ngIf=\"!formCadastro.controls['email'].valid && formCadastro.controls['email'].touched\">\n                        {{ getErrorEmail() }}\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field flex fxFlex>\n                    <mat-label>Telefone</mat-label>\n                    <input matInput placeholder=\"Telefone\" mask=\"(00)0000-0000\" formControlName=\"telefone\" required\n                        autocomplete=\"off\">\n                    <mat-error>Campo é obrigatório</mat-error>\n                </mat-form-field>\n            </div>\n            <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"100px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field flex fxFlex>\n                    <mat-label>Senha</mat-label>\n                    <input matInput placeholder=\"Senha\" formControlName=\"senha\" autocomplete=\"off\">\n                    <mat-error>Campo é obrigatório</mat-error>\n                </mat-form-field>\n            </div>\n        </mat-card>\n\n        <!-- Right block -->\n\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>Endereço</mat-card-title>\n            </mat-card-header>\n            <div formGroupName=\"endereco\">\n                <mat-form-field flex fxFlex>\n                    <mat-label>CEP</mat-label>\n                    <input matInput placeholder=\"cep\" mask=\"00000-000\" [dropSpecialCharacters]=\"false\" maxlength=\"10\"\n                        id=\"cep\" formControlName=\"cep\" (blur)=\"pesquisarCep($event.target.value)\" required\n                        autocomplete=\"off\">\n\n                    <mat-error\n                        *ngIf=\"!formCadastro.get('endereco.cep').valid && formCadastro.get('endereco.cep').touched\">\n                        {{ getErrorCep() }}\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field flex fxFlex>\n                    <mat-label>Endereço</mat-label>\n                    <input matInput placeholder=\"endereço\" formControlName=\"logradouro\" required autocomplete=\"off\">\n                </mat-form-field>\n                <mat-form-field flex fxFlex>\n                    <mat-label>Número</mat-label>\n                    <input matInput placeholder=\"numero\" formControlName=\"numero\" required autocomplete=\"off\">\n                </mat-form-field>\n                <mat-form-field flex fxFlex>\n                    <mat-label>Complemento</mat-label>\n                    <input matInput placeholder=\"complemento\" formControlName=\"complemento\">\n                </mat-form-field>\n                <mat-form-field flex fxFlex>\n                    <mat-label>bairro</mat-label>\n                    <input matInput placeholder=\"bairro\" formControlName=\"bairro\" required autocomplete=\"off\">\n                </mat-form-field>\n                <mat-form-field flex fxFlex>\n                    <mat-label>Cidade</mat-label>\n                    <input matInput placeholder=\"cidade\" formControlName=\"cidade\" required autocomplete=\"off\">\n                </mat-form-field>\n                <mat-form-field flex>\n                    <mat-label>UF</mat-label>\n                    <input matInput placeholder=\"uf\" formControlName=\"uf\" required autocomplete=\"off\">\n                </mat-form-field>\n            </div>\n        </mat-card>\n\n        <mat-card-actions>\n            <button mat-raised-button color=\"primary\" [disabled]=\"!formCadastro.valid\">Salvar</button>\n            <button type=\"button\" mat-raised-button routerLink=\"/clientes\">Voltar</button>\n            <!-- <button type=\"button\" mat-raised-button (click)='download()'>Download</button> -->\n\n        </mat-card-actions>\n\n\n        <!-- Submit & Reset -->\n        <!-- <mat-card>\n            <div class=\"full-wrapper button-wrapper\">\n                <div class=\"button-wrapper\">\n                    <button mat-flat-button color=\"warn\">Salvar</button>\n                </div>\n            </div>\n        </mat-card>  -->\n    </form>\n</div>","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CepService {\r\n    // https://viacep.com.br/ws/01001000/json/\r\n  private cepURL = 'https://viacep.com.br/ws';\r\n\r\n  private endpoint= 'clientes'\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  \r\n  pesquisar(cep: string): Observable<any> {\r\n      return this.httpClient.get<any>(`${this.cepURL}/${cep}/json`);\r\n  }\r\n\r\n  \r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClienteCadEditComponent } from './componentes/cliente-cad-edit.component';\nconst routes: Routes = [\n  {path: \"\", component: ClienteCadEditComponent}\n];\n\n@NgModule({\n imports: [RouterModule.forChild(routes)],\n exports: [RouterModule]\n})\nexport class ClienteCadEditRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ClienteCadEditRoutingModule } from './cliente-cad-edit-routing.module';\nimport { ClienteCadEditComponent } from './componentes/cliente-cad-edit.component';\nimport { MaterialModule } from 'src/app/material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMaskModule, IConfig } from 'ngx-mask'\n \nconst maskConfig: Partial<IConfig> = {\n  validation: false,\n};\n\n\n@NgModule({\n  declarations: [ClienteCadEditComponent],\n  imports: [\n    NgxMaskModule.forRoot(maskConfig),\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    ClienteCadEditRoutingModule,\n  ]\n})\nexport class ClienteCadEditModule { }\n"],"sourceRoot":"webpack:///"}